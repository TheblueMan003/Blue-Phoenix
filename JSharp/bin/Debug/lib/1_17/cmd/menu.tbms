{"projectName":"menu","datapackDirectory":null,"resourcesPackDirectory":null,"offuscate":true,"isLibrary":true,"description":"","files":[{"name":"import","content":"import standard.java\nimport standard.entity_id\nimport standard.object\nimport inventory\nimport tools\nimport input\nimport cmd.schedule","index":0},{"name":"menu","content":"package menu\n\nINT MenuIndex\nINT MenuIndex2\nBOOL MenuOPEN\nINT SaveIndex\n\nforgenerate($i,0,8){\n    VOID=>VOID Button$i\n}\n\nbool[100] free_slot := false\n\ndef zzzopenlocal(){\n    @inputinit()\n    free_slot := false\n    MenuOPEN = true\n    SaveIndex = 99\n    forgenerate($i,99,0,-1){\n        if (free_slot.$i == false){\n            SaveIndex = $i\n        }\n    }\n    free_slot[SaveIndex] = true\n    switch(SaveIndex){\n        forgenerate($i,0,100){\n            case($i){\n                positioned($i -64 0){\n                    /setblock ~ ~ ~ barrel\n                    inventory.saveinchest()\n                }\n            }\n        }\n    }\n    main.start()\n}\ndef zzzcloselocal(){\n    MenuOPEN = false\n    main.stop()\n    switch(SaveIndex){\n        forgenerate($i,0,100){\n            case($i){\n                positioned($i -64 0){\n                    inventory.loadfromchest()\n                }\n            }\n        }\n    }\n    free_slot[SaveIndex] = false\n}\nlazy open(int $name){\n    if (!MenuOPEN){\n        zzzopenlocal()\n    }\n    forgenerate($i,0,8){\n        Button$i = pass\n    }\n    inventory.sethotbar(air)\n    inventory.setoffhand(carrot_on_a_stick)\n    MenuIndex = 0\n    MenuIndex2 = 8\n    __menu_$name()\n}\ndef close(){\n    if (MenuOPEN){\n        zzzcloselocal()\n    }\n}\nlazy open(void=>void $fct){\n    if (!MenuOPEN){\n        zzzopenlocal()\n    }\n    forgenerate($i,0,8){\n        Button$i = pass\n    }\n    inventory.sethotbar(air)\n    inventory.setoffhand(carrot_on_a_stick)\n    MenuIndex = 0\n    MenuIndex2 = 8\n    $fct()\n}\n[inplace]\ndef new(int $name, void=>void $fct){\n    void=>void __menu_$name = $fct()\n}\nlazy addButton(int $item, void=>void $fct){\n    switch(MenuIndex){\n        forgenerate($j,0,8){\n            case($j){\n                inventory.sethotbarslot($j, $item)\n                Button$j = $fct\n            }\n        }\n    }\n    MenuIndex ++\n}\nlazy addButtonRight(int $item, void=>void $fct){\n    switch(MenuIndex2){\n        forgenerate($j,0,8){\n            case($j){\n                inventory.sethotbarslot($j, $item)\n                Button$j = $fct\n            }\n        }\n    }\n    MenuIndex2 --\n}\nlazy addSpace(){\n    switch(MenuIndex){\n        forgenerate($j,0,8){\n            case($j){\n                inventory.sethotbarslot($j, air)\n                Button$j = pass\n            }\n        }\n    }\n    MenuIndex ++\n}\n\ncprocess main{\n    def main(){\n        with(@a,true,MenuOPEN){\n            input.onclick(){\n                int slot = @s.slot\n                switch(slot){\n                    forgenerate($i,0,8){\n                        case($i){\n                            Button$i()\n                        }\n                    }\n                }\n            }\n        }\n    }\n}","index":0}],"resources":[],"TagsList":{"blocks":{},"functions":{}},"mcTagsList":{"blocks":{},"functions":{"load":{"values":["load"]},"tick":{"values":["main"]}}},"compileOrder":[],"version":{"major":1,"minor":0,"patch":0,"build":10},"compilationSetting":{"TreeMaxSize":20,"FloatPrecision":1000,"removeUselessFile":true,"offuscate":true,"randomLambdaID":true,"scoreboardValue":"tbms.value","structuresSource":"","structuresSources":{},"scoreboardConst":"tbms.const","scoreboardTmp":"tbms.tmp","tagsFolder":true,"forcedOffuscation":{},"libraryFolder":["./lib/1_19/","./lib/1_18/","./lib/1_17/","./lib/1_16_5/","./lib/shared/"],"MCVersion":"1.16.5","ExportAsZip":false,"packformat":10,"rppackformat":9,"CompilerCoreName":"java","Authors":"","generateMAPSFile":true,"generateREADMEFile":true,"opti_FunctionTagsReplace":true,"opti_ExportComment":false,"opti_ShowException":true,"opti_ShowDebug":true,"opti_FileCleanUp":true,"opti_LambdaCleanUp":false,"advanced_debug":false,"autoSave":true,"exportInterface":true,"isLibrary":false}}