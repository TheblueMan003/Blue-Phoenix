{"projectName":"tool","datapackDirectory":null,"resourcesPackDirectory":null,"offuscate":false,"isLibrary":false,"description":"Made With BluePhoenix","files":[{"name":"import","content":"import standard.java","index":0},{"name":"main","content":"package tools\n\nINT X, Y, Z\n\n\"\"\"\nexecute func at (x, y, z) as an entity\n\"\"\"\ndef locatedAs(float x, float y, float z, function func){\n\t/summon area_effect_cloud ~ ~3 ~ {Radius:0f,Duration:999,Tags:[\"tool_loc\"]}\n\t@e[tag=tool_loc,limit=1].x=x\n\t@e[tag=tool_loc,limit=1].y=y\n\t@e[tag=tool_loc,limit=1].z=z\n\twith(@e[tag=tool_loc],true){\n\t\tuntag(tool_loc)\n\t\tfunc()\n\t\tkill(@s)\n\t}\n}\n\n\"\"\"\nexecute func at (x, y, z)\n\"\"\"\ndef locatedAt(float x, float y, float z, function func){\n\t/summon area_effect_cloud ~ ~3 ~ {Radius:0f,Duration:999,Tags:[\"tool_loc\"]}\n\t@e[tag=tool_loc,limit=1].x=x\n\t@e[tag=tool_loc,limit=1].y=y\n\t@e[tag=tool_loc,limit=1].z=z\n\tat(@e[tag=tool_loc]){\n\t\tuntag(@e[tag=tool_loc],tool_loc)\n\t\tfunc()\n\t\tkill(@e[tag=tool_loc])\n\t}\n}\n\nalias positionedAt as locatedAt\nalias positionedAs as locatedAs\n\n\ndef setSpawn(){\n\tX = @s.x\n\tY = @s.x\n\tZ = @s.z\n}\n\ndef tpSpawn(){\n\tfunction<(),()> lambda = () => (/tp @s ~ ~ ~)\n\tlocatedAt(X, Y, Z, lambda)\n}\n\n\"\"\"\ncreate a team, make everyone join it and disable PVP and collision\n\"\"\"\ndef disablePVP(){\n\t/team add Player\n\t/team join Player @a\n\t/team modify Player collisionRule never\n\t/team modify Player friendlyFire false\n\t/team modify Player deathMessageVisibility never\n\t/team modify Player color gold\n\tgamerule(maxEntityCramming, 1000)\n}","index":0},{"name":"more_cmd","content":"package tools\n\n\"\"\"\nset a block at (x, y, z)\n\"\"\"\ndef lazy setblockat(float x, float y, float z, int block){\n\t/summon area_effect_cloud ~ ~3 ~ {Particle:mobSpell,Radius:0f,Duration:999,Tags:[\"tool_sba\"]}\n\t@e[tag=tool_sba,limit=1].x=x\n\t@e[tag=tool_sba,limit=1].y=y\n\t@e[tag=tool_sba,limit=1].z=z\n\tat(@e[tag=tool_sba]){\n\t\tsetblock($block)\n\t}\n\tkill(@e[tag=tool_sba])\n}\n\n\"\"\"\nfill from (sx, sy, sz) to (ex, ey, ez)\n\"\"\"\ndef lazy fillat(float sx, float sy, float sz, float ex, float ey, float ez, int $block){\n\t/summon area_effect_cloud ~ ~3 ~ {Radius:0f,Duration:999,Tags:[\"tool_sba\"]}\n\tint j\n\tif (sx > ex){\n\t\tj = ex\n\t\tex = sx\n\t\tsx = j\n\t}\n\tif (sy > ey){\n\t\tj = ey\n\t\tey = sy\n\t\tsy = j\n\t}\n\tif (sz > ez){\n\t\tj = ez\n\t\tez = sz\n\t\tsz = j\n\t}\n\tfor(int x = sx;x <= sx;x++){\n\t\t@e[tag=tool_sba,limit=1].x=x\n\t\tfor(int y = sy;y <= sy;y++){\n\t\t\t@e[tag=tool_sba,limit=1].y=y\n\t\t\tfor(int z = sz;z <= sz;z++){\n\t\t\t\t@e[tag=tool_sba,limit=1].z=z\n\t\t\t\tat(@e[tag=tool_sba]){\n\t\t\t\t\tsetblock($block)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tkill(@e[tag=tool_sba])\n}\n\n\"\"\"\nexecute command from (sx, sy, sz) to (ex, ey, ez)\n\"\"\"\ndef fillExecute(int sx, int sy, int sz, int ex, int ey, int ez, function action){\n\t/summon area_effect_cloud ~ ~3 ~ {Radius:0f,Duration:999,Tags:[\"tool_sba\"]}\n\tfor(int x = sx;x <= sx;x++){\n\t\t@e[tag=tool_sba,limit=1].x = x\n\t\tfor(int y = sy;y <= sy;y++){\n\t\t\t@e[tag=tool_sba,limit=1].y = y\n\t\t\tfor(int z = sz;z <= sz;z++){\n\t\t\t\t@e[tag=tool_sba,limit=1].z = z\n\t\t\t\tat(@e[tag=tool_sba]){\n\t\t\t\t\taction()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tkill(@e[tag=tool_sba])\n}","index":0},{"name":"count","content":"package tools\n\nint lazy count(entity $selector){\n\tint _val = 0\n\twith($selector){\n\t\t_val++\n\t}\n\treturn(_val)\n}\n\nint lazy countWithCondition(entity $selector,string $condition){\n\tint _val = 0\n\twith($selector,false,$condition){\n\t\t_val++\n\t}\n\treturn(_val)\n}","index":0},{"name":"best","content":"package tools\n\ndef lazy findBest(entity $selector,int $var, int $tagGive){\n\tint _prev = int.minValue\n\twith($selector){\n\t\tif ($var == _prev){\n\t\t\ttag($tagGive)\n\t\t}\n\t\tif ($var > _prev){\n\t\t\tunitag(@s,$tagGive)\n\t\t\t_prev = $var\n\t\t}\n\t}\n}","index":0},{"name":"worst","content":"package tools\n\ndef lazy findWorst(entity $selector,int $var, int $tagGive){\n\tint _prev = int.maxValue\n\twith($selector){\n\t\tif ($var == _prev){\n\t\t\ttag($tagGive)\t\n\t\t}\n\t\tif ($var > _prev){\n\t\t\tunitag(@s,$tagGive)\n\t\t\t_prev = $var\n\t\t}\n\t}\n}","index":0},{"name":"enum","content":"package tools\n\ndef lazy enumSetter(int $var,int $enum){\n\tforgenerate($value,$enum){\n\t\tdef set$value(){\n\t\t\t$var = $value\n\t\t}\n\t}\n}","index":0},{"name":"rank","content":"package tools\n\ndef lazy rankBest(entity $selector,int $var, int $varOut){\n\twith($selector){\n\t\t$varOut = 1\n\t}\n\twith($selector){\n\t\tint _val = $var\n\t\twith($selector,false, $var < _val){\n\t\t\t$varOut ++\n\t\t}\n\t}\n}","index":0},{"name":"scoreboard","content":"package tools\n\ndef lazy displayScore(int $var, json $text){\n\t/scoreboard objectives modify $var.scoreboardname displayname $text\n\t/scoreboard objectives setdisplay sidebar $var.scoreboardname\n}\n\ndef lazy swap(int $a, int $b){\n\t/scoreboard players operation $a.scoreboard >< $b.scoreboard\n}","index":0},{"name":"random","content":"package tools\n\ndef lazy explode(int $power){\n\t/summon creeper ~ ~ ~ {powered:0,ExplosionRadius:$power,Fuse:0,Invisible:1,Invulnerable:1b}\n}\n\ndef lazy summonFallingBlock(int $block){\n\talign(xyz){\n\t\t/summon minecraft:falling_block ~0.5 ~ ~0.5 {BlockState:{Name:$block},Time:1, DropItem:0}\n\t}\n}\ndef lazy summonFallingBlockNoGravity(int $block){\n\talign(xyz){\n\t\t/summon minecraft:falling_block ~0.5 ~ ~0.5 {BlockState:{Name:$block},Time:1, DropItem:0,NoGravity:1}\n\t}\n}\ndef lazy summonMovableFallingBlock(int $block){\n\t/summon armor_stand ~ ~ ~ {NoGravity:1,Invisible:1,Marker:1,Tags:[\"falling_block\"],Passengers:[{id:falling_block,Time:1,BlockState:{Name:$block}}]}\n}\ndef lazy summonPointer(int $tag){\n\t/summon area_effect_cloud ~ ~ ~ {Radius:0f,Duration:999,Tags:[$tag]}\t\n}\ndef lazy loottableChest(int $loottable){\n\t/setblock ~ ~ ~ minecraft:chest{LootTable:$loottable} replace\t\n}","index":0}],"resources":[],"TagsList":{"blocks":{},"functions":{}},"mcTagsList":{"blocks":{},"functions":{"load":{"values":[]},"tick":{"values":[]}}},"compileOrder":[],"version":{"major":1,"minor":0,"patch":0,"build":23},"compilationSetting":{"TreeMaxSize":20,"FloatPrecision":1000,"removeUselessFile":true,"offuscate":true,"scoreboardValue":"tbms.value","scoreboardConst":"tbms.const","scoreboardTmp":"tbms.tmp","forcedOffuscation":{}}}