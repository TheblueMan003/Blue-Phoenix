{"projectName":"tool","datapackDirectory":null,"resourcesPackDirectory":null,"offuscate":true,"isLibrary":true,"description":"Made With BluePhoenix","files":[{"name":"import","content":"import standard.java","index":0},{"name":"main","content":"package tools\n\nINT X, Y, Z\n\n\"\"\"\nexecute func at (x, y, z) as an entity\n\"\"\"\ndef locatedAs(float x, float y, float z, function func){\n\t/summon marker ~ ~ ~ {Tags:[\"tool_loc\"]}\n\t@e[tag=tool_loc,limit=1].x=x\n\t@e[tag=tool_loc,limit=1].y=y\n\t@e[tag=tool_loc,limit=1].z=z\n\twith(@e[tag=tool_loc],true){\n\t\tuntag(tool_loc)\n\t\tfunc()\n\t\tkill(@s)\n\t}\n}\n\n\"\"\"\nexecute func at (x, y, z)\n\"\"\"\ndef locatedAt(float x, float y, float z, function func){\n\t/summon marker ~ ~ ~ {Tags:[\"tool_loc\"]}\n\t@e[tag=tool_loc,limit=1].x=x\n\t@e[tag=tool_loc,limit=1].y=y\n\t@e[tag=tool_loc,limit=1].z=z\n\tat(@e[tag=tool_loc]){\n\t\tuntag(@e[tag=tool_loc],tool_loc)\n\t\tfunc()\n\t\tkill(@e[tag=tool_loc])\n\t}\n}\n\nalias positionedAt as locatedAt\nalias positionedAs as locatedAs\n\n\ndef setSpawn(){\n\tX = @s.x\n\tY = @s.x\n\tZ = @s.z\n}\n\ndef tpSpawn(){\n\tfunction<(),()> lambda = () => (/tp @s ~ ~ ~)\n\tlocatedAt(X, Y, Z, lambda)\n}\n\n\"\"\"\ncreate a team, make everyone join it and disable PVP and collision\n\"\"\"\ndef disablePVP(){\n\t/team add Player\n\t/team join Player @a\n\t/team modify Player collisionRule never\n\t/team modify Player friendlyFire false\n\t/team modify Player deathMessageVisibility never\n\t/team modify Player color gold\n\tgamerule(maxEntityCramming, 1000)\n}","index":0},{"name":"more_cmd","content":"package tools\r\n\r\n\"\"\"\r\nset a block at (x, y, z)\r\n\"\"\"\r\ndef lazy setblockat(float x, float y, float z, int block){\r\n    /summon marker ~ ~ ~ {Tags:[\"tool_sba\"]}\r\n    @e[tag=tool_sba,limit=1].x=x\r\n    @e[tag=tool_sba,limit=1].y=y\r\n    @e[tag=tool_sba,limit=1].z=z\r\n    at(@e[tag=tool_sba]){\r\n        setblock($block)\r\n    }\r\n    kill(@e[tag=tool_sba])\r\n}\r\n\r\n\"\"\"\r\nfill from (sx, sy, sz) to (ex, ey, ez)\r\n\"\"\"\r\ndef lazy fillat(float sx, float sy, float sz, float ex, float ey, float ez, int $block){\r\n    /summon marker ~ ~ ~ {Tags:[\"tool_sba\"]}\r\n    int j\r\n    if (sx > ex){\r\n        j = ex\r\n        ex = sx\r\n        sx = j\r\n    }\r\n    if (sy > ey){\r\n        j = ey\r\n        ey = sy\r\n        sy = j\r\n    }\r\n    if (sz > ez){\r\n        j = ez\r\n        ez = sz\r\n        sz = j\r\n    }\r\n    for(int x = sx;x <= sx;x++){\r\n        @e[tag=tool_sba,limit=1].x=x\r\n        for(int y = sy;y <= sy;y++){\r\n            @e[tag=tool_sba,limit=1].y=y\r\n            for(int z = sz;z <= sz;z++){\r\n                @e[tag=tool_sba,limit=1].z=z\r\n                at(@e[tag=tool_sba]){\r\n                    setblock($block)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    kill(@e[tag=tool_sba])\r\n}\r\n\r\n\"\"\"\r\nexecute command from (sx, sy, sz) to (ex, ey, ez)\r\n\"\"\"\r\ndef fillExecute(int sx, int sy, int sz, int ex, int ey, int ez, function action){\r\n    /summon marker ~ ~ ~ {Tags:[\"tool_sba\"]}\r\n    for(int x = sx;x <= sx;x++){\r\n        @e[tag=tool_sba,limit=1].x = x\r\n        for(int y = sy;y <= sy;y++){\r\n            @e[tag=tool_sba,limit=1].y = y\r\n            for(int z = sz;z <= sz;z++){\r\n                @e[tag=tool_sba,limit=1].z = z\r\n                at(@e[tag=tool_sba]){\r\n                    action()\r\n                }\r\n            }\r\n        }\r\n    }\r\n    kill(@e[tag=tool_sba])\r\n}","index":0},{"name":"count","content":"package tools\r\n\r\nint lazy count(entity $selector){\r\n    int _val = 0\r\n    with($selector){\r\n        _val++\r\n    }\r\n    return(_val)\r\n}\r\n\r\nint lazy countWithCondition(entity $selector,string $condition){\r\n    int _val = 0\r\n    with($selector,false,$condition){\r\n        _val++\r\n    }\r\n    return(_val)\r\n}","index":0},{"name":"best","content":"package tools\r\n\r\ndef lazy findBest(entity $selector,int $var, int $tagGive){\r\n    int _prev = int.minValue\r\n    with($selector){\r\n        if ($var == _prev){\r\n            tag($tagGive)\r\n        }\r\n        if ($var > _prev){\r\n            unitag(@s,$tagGive)\r\n            _prev = $var\r\n        }\r\n    }\r\n}","index":0},{"name":"worst","content":"package tools\r\n\r\ndef lazy findWorst(entity $selector,int $var, int $tagGive){\r\n    int _prev = int.maxValue\r\n    with($selector){\r\n        if ($var == _prev){\r\n            tag($tagGive)   \r\n        }\r\n        if ($var > _prev){\r\n            unitag(@s,$tagGive)\r\n            _prev = $var\r\n        }\r\n    }\r\n}","index":0},{"name":"enum","content":"package tools\r\n\r\n[inplace]\r\ndef lazy enumSetter(int $var,int $enum){\r\n    forgenerate($value,$enum){\r\n        def set$value(){\r\n            $var = $value\r\n        }\r\n    }\r\n}","index":0},{"name":"rank","content":"package tools\r\n\r\ndef lazy rankBest(entity $selector,int $var, int $varOut){\r\n    with($selector){\r\n        $varOut = 1\r\n    }\r\n    with($selector){\r\n        int _val = $var\r\n        with($selector,false, $var < _val){\r\n            $varOut ++\r\n        }\r\n    }\r\n}","index":0},{"name":"scoreboard","content":"package tools\r\n\r\ndef lazy displayScore(int $var, json $text){\r\n    /scoreboard objectives modify $var.scoreboardname displayname $text\r\n    /scoreboard objectives setdisplay sidebar $var.scoreboardname\r\n}\r\n\r\ndef lazy swap(int $a, int $b){\r\n    /scoreboard players operation $a.scoreboard >< $b.scoreboard\r\n}","index":0},{"name":"random","content":"package tools\r\n\r\ndef lazy explode(int $power){\r\n    /summon creeper ~ ~ ~ {powered:0,ExplosionRadius:$power,Fuse:0,Invisible:1,Invulnerable:1b}\r\n}\r\n\r\ndef lazy summonFallingBlock(int $block){\r\n    align(xyz){\r\n        /summon minecraft:falling_block ~0.5 ~ ~0.5 {BlockState:{Name:$block},Time:1, DropItem:0}\r\n    }\r\n}\r\ndef lazy summonFallingBlockNoGravity(int $block){\r\n    align(xyz){\r\n        /summon minecraft:falling_block ~0.5 ~ ~0.5 {BlockState:{Name:$block},Time:1, DropItem:0,NoGravity:1}\r\n    }\r\n}\r\ndef lazy summonMovableFallingBlock(int $block){\r\n    /summon armor_stand ~ ~ ~ {NoGravity:1,Invisible:1,Marker:1,Tags:[\"falling_block\"],Passengers:[{id:falling_block,Time:1,BlockState:{Name:$block}}]}\r\n}\r\ndef lazy summonPointer(int $tag){\r\n    /summon marker ~ ~ ~ {Tags:[$tag]}  \r\n}\r\ndef lazy loottableChest(int $loottable){\r\n    /setblock ~ ~ ~ minecraft:chest{LootTable:$loottable} replace   \r\n}","index":0}],"resources":[],"TagsList":{"blocks":{},"functions":{}},"mcTagsList":{"blocks":{},"functions":{"load":{"values":[]},"tick":{"values":[]}}},"compileOrder":[],"version":{"major":1,"minor":0,"patch":0,"build":25},"compilationSetting":{"TreeMaxSize":20,"FloatPrecision":1000,"removeUselessFile":true,"offuscate":true,"scoreboardValue":"tbms.value","scoreboardConst":"tbms.const","scoreboardTmp":"tbms.tmp","tagsFolder":true,"forcedOffuscation":{},"libraryFolder":["./lib/1_16_5/"],"MCVersion":"1.16.5","ExportAsZip":false,"packformat":6,"rppackformat":7,"CompilerCoreName":"java","Authors":"","generateMAPSFile":true,"generateREADMEFile":true,"opti_FunctionTagsReplace":true,"opti_ExportComment":false,"opti_ShowException":true,"opti_ShowDebug":true,"isLibrary":false}}