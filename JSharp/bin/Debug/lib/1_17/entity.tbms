{"projectName":"entity","datapackDirectory":null,"resourcesPackDirectory":null,"offuscate":true,"isLibrary":true,"description":null,"files":[{"name":"import","content":"import standard.java\r\nimport standard.entity_id\r\nimport standard.object\r\n","index":0},{"name":"entity","content":"package entity\n\npredicate onFire(){\n    \"condition\": \"minecraft:entity_properties\",\n    \"entity\": \"this\",\n    \"predicate\": {\n        \"flags\": {\n            \"is_on_fire\": true\n        }\n    }\n}\n\npredicate isSneaking(){\n    \"condition\": \"minecraft:entity_properties\",\n    \"entity\": \"this\",\n    \"predicate\": {\n        \"flags\": {\n            \"is_sneaking\": true\n        }\n    }\n}\n\npredicate isSprinting(){\n    \"condition\": \"minecraft:entity_properties\",\n    \"entity\": \"this\",\n    \"predicate\": {\n        \"flags\": {\n            \"is_sprinting\": true\n        }\n    }\n}\n\npredicate isSwimming(){\n    \"condition\": \"minecraft:entity_properties\",\n    \"entity\": \"this\",\n    \"predicate\": {\n        \"flags\": {\n            \"is_swimming\": true\n        }\n    }\n}\n\npredicate isBaby(){\n    \"condition\": \"minecraft:entity_properties\",\n    \"entity\": \"this\",\n    \"predicate\": {\n        \"flags\": {\n            \"is_baby\": true\n        }\n    }\n}\n","index":0},{"name":"player","content":"package entity\n\npredicate xp($amount){\n\t\"condition\": \"minecraft:entity_properties\",\n\t\"entity\": \"this\",\n\t\"predicate\": {\n\t\t\"player\": {\n\t\t\t\"level\": $amount\n\t\t}\n\t}\n}\n\npredicate xp($min,$max){\n\t\"condition\": \"minecraft:entity_properties\",\n\t\"entity\": \"this\",\n\t\"predicate\": {\n\t\t\"player\": {\n\t\t\t\"level\": {\n\t\t\t\t\"min\": $min,\n\t\t\t\t\"max\": $max\n\t\t\t}\n\t\t}\n\t}\n}\n\npredicate creative(){\n\t\"condition\": \"minecraft:entity_properties\",\n\t\"entity\": \"this\",\n\t\"predicate\": {\n\t\t\"player\": {\n\t\t\t\"gamemode\": \"creative\"\n\t\t}\n\t}\n}\n\npredicate survival(){\n\t\"condition\": \"minecraft:entity_properties\",\n\t\"entity\": \"this\",\n\t\"predicate\": {\n\t\t\"player\": {\n\t\t\t\"gamemode\": \"survival\"\n\t\t}\n\t}\n}\n\npredicate adventure(){\n\t\"condition\": \"minecraft:entity_properties\",\n\t\"entity\": \"this\",\n\t\"predicate\": {\n\t\t\"player\": {\n\t\t\t\"gamemode\": \"adventure\"\n\t\t}\n\t}\n}\n\npredicate spectator(){\n\t\"condition\": \"minecraft:entity_properties\",\n\t\"entity\": \"this\",\n\t\"predicate\": {\n\t\t\"player\": {\n\t\t\t\"gamemode\": \"spectator\"\n\t\t}\n\t}\n}\n","index":0},{"name":"effect","content":"package entity\n\npredicate effect($effect,$amplifier,$duration){\n\t\"condition\": \"minecraft:entity_properties\",\n\t\"entity\": \"this\",\n\t\"predicate\": {\n\t\t\"targeted_entity\": {\n\t\t\t\"effects\": {\n\t\t\t\t\"minecraft:$effect\": {\n\t\t\t\t\t\"amplifier\": $amplifier,\n\t\t\t\t\t\"duration\": $duration\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\npredicate effect($effect,$amplifier){\n\t\"condition\": \"minecraft:entity_properties\",\n\t\"entity\": \"this\",\n\t\"predicate\": {\n\t\t\"targeted_entity\": {\n\t\t\t\"effects\": {\n\t\t\t\t\"minecraft:$effect\": {\n\t\t\t\t\t\"amplifier\": $amplifier\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\npredicate effect($effect){\n\t\"condition\": \"minecraft:entity_properties\",\n\t\"entity\": \"this\",\n\t\"predicate\": {\n\t\t\"targeted_entity\": {\n\t\t\t\"effects\": {\n\t\t\t\t\"minecraft:$effect\": {\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","index":0},{"name":"team","content":"package entity\n\npredicate team($team){\n\t\"condition\": \"minecraft:entity_properties\",\n\t\"entity\": \"this\",\n\t\"predicate\": {\n\t\t\"targeted_entity\": {\n\t\t\t\"team\": \"$team\"\n\t\t}\n\t}\n}\n","index":0},{"name":"dimension","content":"package entity\n\npredicate overworld(){\n\t\"condition\": \"minecraft:location_check\",\n\t\"predicate\": {\n\t\t\"dimension\": \"minecraft:overworld\"\n\t}\n}\n\npredicate the_end(){\n\t\"condition\": \"minecraft:location_check\",\n\t\"predicate\": {\n\t\t\"dimension\": \"minecraft:the_end\"\n\t}\n}\n\npredicate nether(){\n\t\"condition\": \"minecraft:location_check\",\n\t\"predicate\": {\n\t\t\"dimension\": \"minecraft:the_nether\"\n\t}\n}\n","index":0},{"name":"summon","content":"package entity\n\ndef lazy summon(int $mob, params $param){\n    define json $data = {}\n    forgenerate($i,$param){\n        define json $data += {$i}\n    }\n    /summon $mob $data\n}","index":0},{"name":"struct","content":"package entity\n\npublic struct entitylist{\n    def lazy __init__(int $select){\n        tag($select,$this)\n    }\n    def lazy withAll(function $f){\n        with(@e[tag=$this]){\n            $f()\n        }\n    }\n    def lazy withAll(bool $v,function $f){\n        with(@e[tag=$this],$v){\n            $f()\n        }\n    }\n    def lazy withAll(bool $v,int $cond,function $f){\n        with(@e[tag=$this],$v, $cond){\n            $f()\n        }\n    }\n    \n    def lazy withFirst(function $f){\n        with(@e[tag=$this,limit=1]){\n            $f()\n        }\n    }\n    def lazy withFirst(bool $v,function $f){\n        with(@e[tag=$this,limit=1],$v){\n            $f()\n        }\n    }\n    def lazy withFirst(bool $v,int $cond,function $f){\n        with(@e[tag=$this,limit=1],$v, $cond){\n            $f()\n        }\n    }\n    \n    def lazy withNearest(function $f){\n        with(@e[tag=$this,limit=1,sort=nearest]){\n            $f()\n        }\n    }\n    def lazy withNearest(bool $v,function $f){\n        with(@e[tag=$this,limit=1,sort=nearest],$v){\n            $f()\n        }\n    }\n    def lazy withNearest(bool $v,int $cond,function $f){\n        with(@e[tag=$this,limit=1,sort=nearest],$v, $cond){\n            $f()\n        }\n    }\n    \n    def lazy withRandom(function $f){\n        with(@e[tag=$this,limit=1,sort=random]){\n            $f()\n        }\n    }\n    def lazy withRandom(bool $v, function $f){\n        with(@e[tag=$this,limit=1,sort=random],$v){\n            $f()\n        }\n    }\n    def lazy withRandom(bool $v,int $cond, function $f){\n        with(@e[tag=$this,limit=1,sort=random],$v, $cond){\n            $f()\n        }\n    }\n    \n    def lazy kill(){\n        /kill @e[tag=$this]\n    }\n    def lazy tp(int $dest){\n        /tp @e[tag=$this] $dest\n    }\n    def lazy count():int{\n        int c = 0\n        with(@e[tag=$this]){\n            c++\n        }\n        return c\n    }\n    def clear(){\n        untag(@e[tag=this],$this)\n    }\n}","index":0},{"name":"struct2","content":"package entity\n\npublic struct playerlist{\n    def lazy __init__(int $select){\n        tag($select,$this)\n    }\n    def lazy withAll(function $f){\n        with(@a[tag=$this]){\n            $f()\n        }\n    }\n    def lazy withAll(bool $v,function $f){\n        with(@a[tag=$this],$v){\n            $f()\n        }\n    }\n    def lazy withAll(bool $v,int $cond,function $f){\n        with(@a[tag=$this],$v, $cond){\n            $f()\n        }\n    }\n    \n    def lazy withFirst(function $f){\n        with(@a[tag=$this,limit=1]){\n            $f()\n        }\n    }\n    def lazy withFirst(bool $v,function $f){\n        with(@a[tag=$this,limit=1],$v){\n            $f()\n        }\n    }\n    def lazy withFirst(bool $v,int $cond,function $f){\n        with(@a[tag=$this,limit=1],$v, $cond){\n            $f()\n        }\n    }\n    \n    def lazy withNearest(function $f){\n        with(@a[tag=$this,limit=1,sort=nearest]){\n            $f()\n        }\n    }\n    def lazy withNearest(bool $v,function $f){\n        with(@a[tag=$this,limit=1,sort=nearest],$v){\n            $f()\n        }\n    }\n    def lazy withNearest(bool $v,int $cond,function $f){\n        with(@a[tag=$this,limit=1,sort=nearest],$v, $cond){\n            $f()\n        }\n    }\n    \n    def lazy withRandom(function $f){\n        with(@a[tag=$this,limit=1,sort=random]){\n            $f()\n        }\n    }\n    def lazy withRandom(bool $v, function $f){\n        with(@a[tag=$this,limit=1,sort=random],$v){\n            $f()\n        }\n    }\n    def lazy withRandom(bool $v,int $cond, function $f){\n        with(@a[tag=$this,limit=1,sort=random],$v, $cond){\n            $f()\n        }\n    }\n    \n    def lazy kill(){\n        /kill @a[tag=$this]\n    }\n    def lazy tp(int $dest){\n        /tp @a[tag=$this] $dest\n    }\n    def lazy count():int{\n        int c = 0\n        with(@a[tag=$this]){\n            c++\n        }\n        return c\n    }\n    def clear(){\n        untag(@a[tag=this],$this)\n    }\n}","index":0}],"resources":[],"TagsList":{"blocks":{},"functions":{}},"mcTagsList":{"blocks":{},"functions":{"load":{"values":["load"]},"tick":{"values":["main"]}}},"compileOrder":[],"version":{"major":1,"minor":0,"patch":0,"build":3},"compilationSetting":{"TreeMaxSize":20,"FloatPrecision":1000,"removeUselessFile":true,"offuscate":true,"scoreboardValue":"tbms.value","scoreboardConst":"tbms.const","scoreboardTmp":"tbms.tmp","tagsFolder":true,"forcedOffuscation":{},"libraryFolder":["./lib/1_17/","./lib/1_16_5/"],"MCVersion":"1.17","ExportAsZip":false,"packformat":6,"CompilerCoreName":"java","isLibrary":false}}