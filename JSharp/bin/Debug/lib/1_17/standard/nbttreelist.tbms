{"projectName":"nbttreelist","datapackDirectory":"C:\\Users\\chris\\AppData\\Roaming\\.minecraft\\saves\\RedstoneReady\\datapacks\\nbt_list","resourcesPackDirectory":null,"offuscate":true,"isLibrary":true,"description":"","files":[{"name":"import","content":"import standard.java\nimport standard.entity_id\nimport standard.object","index":0},{"name":"nbttreelist","content":"package nbttreelist\n\nstruct nbttreelist{\n    int $size\n    int $name\n    def lazy __init__(int $n, int $s){\n        $size = $s\n        $name = $n\n    }\n    def build(){\n        def build_$size(){\n            /data modify storage $name.$size data set value [{},{}]\n        }\n        forgenerate($i,0, $eval($size-1)){\n            def build_$i(){\n                build_$eval($i+1)()\n                /data modify storage $name.$i data set value []\n                /data modify storage $name.$i data append from storage $name.$eval($i+1)\n                /data modify storage $name.$i data append from storage $name.$eval($i+1)\n            }\n        }\n        build_0()\n    }\n    def lazy get(int $index, entity $ent, int $to_path){\n        def search_$eval($size)(int x){\n            int c = x % 2\n            if (c == 0){\n                /data modify entity $ent $to_path set from storage $name.$size data[0]\n            }\n            if (c == 1){\n                /data modify entity $ent $to_path set from storage $name.$size data[1]\n            }\n        }\n        forgenerate($i,0, $eval($size-1)){\n            def search_$i(int x){\n                int c = x % 2\n                if (c == 0){\n                    /data modify storage $name.$eval($i+1) data.data set from storage $name.$i data[0]\n                }\n                if (c == 1){\n                    /data modify storage $name.$eval($i+1) data.data set from storage $name.$i data[1]\n                }\n                search_$eval($i+1)(x/2)\n            }\n        }\n        search_0($index)\n    }\n    def lazy set(int $index, entity $ent, int $to_path){\n        def search_$eval($size)(int x){\n            int c = x % 2\n            if (c == 0){\n                /data modify storage $name.$size data[0].data set from entity $ent $to_path\n            }\n            if (c == 1){\n                /data modify storage $name.$size data[1].data set from entity $ent $to_path\n            }\n        }\n        forgenerate($i,0, $eval($size-1)){\n            def search_$i(int x){\n                int c = x % 2\n                if (c == 0){\n                    /data modify storage $name.$eval($i+1) data set from storage $name.$i data[0].data\n                }\n                if (c == 1){\n                    /data modify storage $name.$eval($i+1) data set from storage $name.$i data[1].data\n                }\n                \n                search_$eval($i+1)(x/2)\n                \n                if (c == 0){\n                    /data modify storage $name.$i data[0].data set from storage $name.$eval($i+1) data\n                }\n                if (c == 1){\n                    /data modify storage $name.$i data[1].data set from storage $name.$eval($i+1) data\n                }\n            }\n        }\n        search_0($index)\n    }\n    lazy copyFrom(int $other){\n        /data modify storage $name.0 data set from storage $other.0 data\n    }\n}","index":0}],"resources":[],"TagsList":{"blocks":{},"functions":{}},"mcTagsList":{"blocks":{},"functions":{"load":{"values":["load"]},"tick":{"values":["main"]}}},"compileOrder":[],"version":{"major":1,"minor":0,"patch":0,"build":53},"compilationSetting":{"TreeMaxSize":20,"FloatPrecision":1000,"removeUselessFile":true,"offuscate":true,"randomLambdaID":true,"scoreboardValue":"tbms.value","scoreboardConst":"tbms.const","scoreboardTmp":"tbms.tmp","tagsFolder":true,"forcedOffuscation":{},"libraryFolder":["./lib/1_17/","./lib/1_16_5/","./lib/shared/"],"MCVersion":"1.16.5","ExportAsZip":false,"packformat":8,"rppackformat":8,"CompilerCoreName":"java","Authors":"","generateMAPSFile":true,"generateREADMEFile":true,"opti_FunctionTagsReplace":true,"opti_ExportComment":false,"opti_ShowException":true,"opti_ShowDebug":true,"opti_FileCleanUp":true,"advanced_debug":false,"isLibrary":false}}