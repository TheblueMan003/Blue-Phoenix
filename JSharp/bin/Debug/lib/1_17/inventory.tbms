{"projectName":"inventory","datapackDirectory":null,"resourcesPackDirectory":null,"offuscate":true,"isLibrary":true,"description":null,"files":[{"name":"import","content":"import standard.java\nimport standard.entity_id","index":0},{"name":"slot","content":"package inventory\n\ndef lazy setChest(int $index,int $item, int $count){\n    /item replace block ~ ~ ~ container.$index with $item $count\n}\n\ndef lazy setChest(int $index,int $item){\n    setChest($index,$item,1)\n}\n\n\ndef lazy setSlot(int $slot,int $item, int $count){\n    /item replace entity @s $slot with $item $count\n}\ndef lazy setSlot(int $slot,int $item){\n    /item replace entity @s $slot with $item\n}\n\ndef lazy setMainHand(int $item, int $count){\n    setSlot(weapon.mainhand,$item,$count)\n}\n\ndef lazy setMainHand(int $item){\n    setMainHand($item,1)\n}\n\ndef lazy setOffHand(int $item, int $count){\n    setSlot(weapon.offhand,$item,$count)\n}\n\ndef lazy setOffHand(int $item){\n    setOffHand($item,1)\n}\n\ndef lazy setHotbar(int $item, int $count){\n    forgenerate($i,0,8){\n        setSlot(hotbar.$i,$item,$count)\n    }\n}\n\ndef lazy setHotbar(int $item){\n    setHotbar($item,1)\n}\n\ndef lazy clearHotbar(){\n    setHotbar(air,1)\n}\n\ndef lazy setInventorySlot(int $index,int $item,int $count){\n    setSlot(inventory.$index,$item,$count)\n}\n\ndef lazy setInventorySlot(int $index,int $item){\n    setInventorySlot($index,$item,1)\n}\n\n\n\n\ndef lazy setChestplate(int $item,int $count){\n    setSlot(armor.chest,$item,$count)\n}\n\ndef lazy setChestplate(int $item){\n    setChestplate($item,1)\n}\n\n\n\n\n\ndef lazy setLeggings(int $item,int $count){\n    setSlot(armor.legs,$item,$count)\n}\n\ndef lazy setLeggings(int $item){\n    setLeggings($item,1)\n}\n\nalias setLegs as setLeggings\n\n\n\ndef lazy setHelmet(int $item,int $count){\n    setSlot(armor.head,$item,$count)\n}\n\ndef lazy setHelmet(int $item){\n    setHelmet($item,1)\n}\n\n\n\nalias setHead as setHelmet\n\ndef lazy setBoots(int $item,int $count){\n    setSlot(armor.feet,$item,$count)\n}\n\ndef lazy setBoots(int $item){\n    setBoots($item,1)\n}\n\nalias setFeet as setBoots\n\n\n\ndef lazy setEnderChest(int $index,int $item,int $count){\n    setSlot(enderchest.$index,$item,$count)\n}\n\ndef lazy setEnderChest(int $index,int $item){\n    setEnderChest($index,$item,1)\n}\n\n\ndef lazy setHorse(int $index,int $item,int $count){\n    setSlot(horse.$index,$item,$count)\n}\n\ndef lazy setHorse(int $index,int $item){\n    setHorse($index,$item,1)\n}\n\n","index":0},{"name":"condition","content":"package inventory\n\npredicate isHoldingItem($item, $count, $data){\n    \"condition\": \"minecraft:entity_properties\",\n    \"entity\": \"this\",\n    \"predicate\": {\n        \"equipment\": {\n            \"mainhand\": {\n                \"items\":[\"minecraft:$item\"],\n                \"count\": $count,\n                \"nbt\": \"$data\"\n            }\n        }\n    }\n}\n\npredicate isHoldingItem($item, $data){\n    \"condition\": \"minecraft:entity_properties\",\n    \"entity\": \"this\",\n    \"predicate\": {\n        \"equipment\": {\n            \"mainhand\": {\n                \"items\":[\"minecraft:$item\"],\n                \"nbt\": \"$data\"\n            }\n        }\n    }\n}\n\npredicate isHoldingItem($item){\n    \"condition\": \"minecraft:entity_properties\",\n    \"entity\": \"this\",\n    \"predicate\": {\n        \"equipment\": {\n            \"mainhand\": {\n                \"items\":[\"minecraft:$item\"]\n            }\n        }\n    }\n}\n\nforgenerate($i,(head,chest,legs,feet,offhand)){\n    predicate isHoldingItem$i($item, $count, $data){\n        \"condition\": \"minecraft:entity_properties\",\n        \"entity\": \"this\",\n        \"predicate\": {\n            \"equipment\": {\n                \"$i\": {\n                    \"items\":[\"minecraft:$item\"],\n                    \"count\": $count,\n                    \"nbt\": \"$data\"\n                }\n            }\n        }\n    }\n    \n    predicate isHoldingItem$i($item, $data){\n        \"condition\": \"minecraft:entity_properties\",\n        \"entity\": \"this\",\n        \"predicate\": {\n            \"equipment\": {\n                \"$i\": {\n                    \"items\":[\"minecraft:$item\"],\n                    \"nbt\": \"$data\"\n                }\n            }\n        }\n    }\n    \n    predicate isHoldingItem$i($item){\n        \"condition\": \"minecraft:entity_properties\",\n        \"entity\": \"this\",\n        \"predicate\": {\n            \"equipment\": {\n                \"$i\": {\n                    \"items\":[\"minecraft:$item\"]\n                }\n            }\n        }\n    }\n}\n\n\n\n\n\nbool lazy isHoldingItem(int $item, int $data){\n    int slot = @s.slot\n    forgenerate($i,0,8){\n        if (slot == $i){\n            return (isHoldingItemInSlot($i,$item,$data))\n        }\n    }\n}\n\nbool lazy isHoldingItem(int $item){\n    int slot = @s.slot\n    forgenerate($i,0,8){\n        if (slot == $i){\n            return (isHoldingItemInSlot($i,$item))\n        }\n    }\n    return(v)\n}\n\nbool lazy isHoldingItemInSlot(int $slot, int $item, int $data){\n    return(false)\n    if (@s[nbt={Inventory:[{Slot:$slotb,id:\"minecraft:$item\",tag:$data}]}]){\n        return(true)\n    }\n}\n\nbool lazy isHoldingItemInSlot(int $slot, int $item){\n    return(false)\n    if (@s[nbt={Inventory:[{Slot:$slotb,id:\"minecraft:$item\"}]}]){\n        return(true)\n    }\n}\n\n\n\nbool lazy isHoldingItemFeet(int $item, int $data){\n    return(false)\n    if (@s[nbt={Inventory:[{Slot:100b,id:\"minecraft:$item\",tag:$data}]}]){\n        return(true)\n    }\n}\n\nbool lazy isHoldingItemLegs(int $item, int $data){\n    return(false)\n    if (@s[nbt={Inventory:[{Slot:101b,id:\"minecraft:$item\",tag:$data}]}]){\n        return(true)\n    }\n}\n\nbool lazy isHoldingItemChest(int $item, int $data){\n    return(false)\n    if (@s[nbt={Inventory:[{Slot:102b,id:\"minecraft:$item\",tag:$data}]}]){\n        return(true)\n    }\n}\n\nbool lazy isHoldingItemHead(int $item, int $data){\n    return(false)\n    if (@s[nbt={Inventory:[{Slot:103b,id:\"minecraft:$item\",tag:$data}]}]){\n        return(true)\n    }\n}\n\nbool lazy isHoldingItemOffHand(int $item, int $data){\n    return(false)\n    if (@s[nbt={Inventory:[{Slot:-106b,id:\"minecraft:$item\",tag:$data}]}]){\n        return(true)\n    }\n}\n","index":0},{"name":"items","content":"package item\n\ndef lazy summon(int $name, int $count, int $data){\n    define int $name = regex($name,\"minecraft:\",\"\")\n    /summon item ~ ~1 ~ {Item:{id:\"minecraft:$name\",Count:$countb,tag:$data}}\n}\n\ndef lazy summon(int $name, int $data){\n    define int $name = regex($name,\"minecraft:\",\"\")\n    /summon item ~ ~1 ~ {Item:{id:\"minecraft:$name\",Count:1b,tag:$data}}\n}\n\ndef lazy summon(int $name){\n    define int $name = regex($name,\"minecraft:\",\"\")\n    /summon item ~ ~1 ~ {Item:{id:\"minecraft:$name\",Count:1b}}\n}\n\nlazy bool isNear(int $item, int $radius){\n    define int $item = regex($item,\"minecraft:\",\"\")\n    int ret = false\n        if (@e[type=item,distance=..$radius,nbt={Item:{id:\"minecraft:$item\"}}]){\n        ret = true\n    }\n    return ret\n}\nlazy bool isNear(int $item){\n    define int $item = regex($item,\"minecraft:\",\"\")\n    int ret = false\n    if (@e[type=item,distance=..1,nbt={Item:{id:\"minecraft:$item\"}}]){\n        ret = true\n    }\n    return ret\n}","index":0},{"name":"other","content":"package inventory\n\ndef clearEnderChest(){\n    forgenerate($i,0,26){\n        setSlot(enderchest.$i,air)\n    }\n}\n\ndef lazy setEnderChest(int $item, int $count){\n    forgenerate($i,0,26){\n        setSlot(enderchest.$i,$item)\n    }\n}\n\ndef lazy setEnderChest(int $item){\n    setEnderChest($item,1)\n}\n\ndef clearHotBar(){\n    forgenerate($i,0,8){\n        setSlot(hotbar.$i,air)\n    }\n}","index":0},{"name":"transfer","content":"package inventory\n\ndef lazy copyFromContainer(int $slot1, int $slot2){\n    /item replace entity @s $slot1 from block ~ ~ ~ container.$slot2\n}\ndef lazy copyFromEntity(int $slot1, entity $ent, int $slot2){\n    /item replace entity @s $slot1 from entity $ent $slot2\n}\ndef saveInChest(){\n    /setblock ~ ~ ~ barrel\n    forgenerate($i,0,26){\n        /item replace block ~ ~ ~ container.$i from entity @s inventory.$i\n    }\n    /setblock ~ ~1 ~ barrel\n    forgenerate($i,0,8){\n        /item replace block ~ ~1 ~ container.$i from entity @s hotbar.$i\n    }\n    /item replace block ~ ~1 ~ container.9 from entity @s armor.head\n    /item replace block ~ ~1 ~ container.10 from entity @s armor.chest\n    /item replace block ~ ~1 ~ container.11 from entity @s armor.legs\n    /item replace block ~ ~1 ~ container.12 from entity @s armor.feet\n    /item replace block ~ ~1 ~ container.13 from entity @s weapon.offhand\n}\ndef loadFromChest(){\n    forgenerate($i,0,26){\n        /item replace entity @s inventory.$i from block ~ ~ ~ container.$i\n    }\n    forgenerate($i,0,8){\n        /item replace entity @s hotbar.$i from block ~ ~1 ~ container.$i\n    }\n    /item replace entity @s armor.head from block ~ ~1 ~ container.9\n    /item replace entity @s armor.chest from block ~ ~1 ~ container.10\n    /item replace entity @s armor.legs from block ~ ~1 ~ container.11\n    /item replace entity @s armor.feet from block ~ ~1 ~ container.12\n    /item replace entity @s weapon.offhand from block ~ ~1 ~ container.13\n}\ndef copyEnderchestToChest(){\n    if (block(~ ~ ~ air)){setblock(chest)}\n    forgenerate($i,0,26){\n        /item replace block ~ ~ ~ container.$i from entity @s enderchest.$i\n    }\n}\ndef copyChestToEnderchest(){\n    forgenerate($i,0,26){\n        /item replace entity @s enderchest.$i from block ~ ~1 ~ container.$i\n    }\n}","index":0}],"resources":[],"TagsList":{"blocks":{},"functions":{}},"mcTagsList":{"blocks":{},"functions":{"load":{"values":["load"]},"tick":{"values":["main"]}}},"compileOrder":[],"version":{"major":1,"minor":0,"patch":0,"build":26},"compilationSetting":{"TreeMaxSize":20,"FloatPrecision":1000,"removeUselessFile":true,"offuscate":true,"scoreboardValue":"tbms.value","scoreboardConst":"tbms.const","scoreboardTmp":"tbms.tmp","tagsFolder":true,"forcedOffuscation":{},"libraryFolder":["./lib/1_16_5/"],"MCVersion":"1.16.5","ExportAsZip":false,"packformat":6,"rppackformat":7,"CompilerCoreName":"java","Authors":"","generateMAPSFile":true,"generateREADMEFile":true,"opti_FunctionTagsReplace":true,"opti_ExportComment":false,"opti_ShowException":true,"opti_ShowDebug":true,"opti_FileCleanUp":true,"advanced_debug":false,"isLibrary":false}}