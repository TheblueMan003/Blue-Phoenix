{"projectName":"inventory","datapackDirectory":null,"resourcesPackDirectory":null,"offuscate":true,"isLibrary":true,"description":null,"files":[{"name":"import","content":"import standard.java\r\nimport standard.entity_id","index":0},{"name":"slot","content":"package inventory\n\ndef lazy setChest(int $index,int $item, int $count){\n    /item replace block ~ ~ ~ container.$index with $item $count\n}\n\ndef lazy setChest(int $index,int $item){\n    setChest($index,$item,1)\n}\n\n\ndef lazy setSlot(int $slot,int $item, int $count){\n    /item replace entity @s $slot with $item $count\n}\n\ndef lazy setMainHand(int $item, int $count){\n    setSlot(weapon.mainhand,$item,$count)\n}\n\ndef lazy setMainHand(int $item){\n    setMainHand($item,1)\n}\n\ndef lazy setOffHand(int $item, int $count){\n    setSlot(weapon.offhand,$item,$count)\n}\n\ndef lazy setOffHand(int $item){\n    setOffHand($item,1)\n}\n\ndef lazy setHotbar(int $item, int $count){\n    forgenerate($i,0,8){\n        setSlot(hotbar.$i,$item,$count)\n    }\n}\n\ndef lazy setHotbar(int $item){\n    setHotbar($item,1)\n}\n\ndef lazy clearHotbar(){\n    setHotbar(air,1)\n}\n\ndef lazy setInventorySlot(int $index,int $item,int $count){\n    setSlot(inventory.$index,$item,$count)\n}\n\ndef lazy setInventorySlot(int $index,int $item){\n    setInventorySlot($index,$item,1)\n}\n\n\n\n\ndef lazy setChestplate(int $item,int $count){\n    setSlot(armor.chest,$item,$count)\n}\n\ndef lazy setChestplate(int $item){\n    setChestplate($item,1)\n}\n\n\n\n\n\ndef lazy setLeggings(int $item,int $count){\n    setSlot(armor.legs,$item,$count)\n}\n\ndef lazy setLeggings(int $item){\n    setLeggings($item,1)\n}\n\nalias setLegs as setLeggings\n\n\n\ndef lazy setHelmet(int $item,int $count){\n    setSlot(armor.head,$item,$count)\n}\n\ndef lazy setHelmet(int $item){\n    setHelmet($item,1)\n}\n\n\n\nalias setHead as setHelmet\n\ndef lazy setBoots(int $item,int $count){\n    setSlot(armor.feet,$item,$count)\n}\n\ndef lazy setBoots(int $item){\n    setBoots($item,1)\n}\n\nalias setFeet as setBoots\n\n\n\ndef lazy setEnderChest(int $index,int $item,int $count){\n    setSlot(enderchest.$index,$item,$count)\n}\n\ndef lazy setEnderChest(int $index,int $item){\n    setEnderChest($index,$item,1)\n}\n\n\ndef lazy setHorse(int $index,int $item,int $count){\n    setSlot(horse.$index,$item,$count)\n}\n\ndef lazy setHorse(int $index,int $item){\n    setHorse($index,$item,1)\n}\n\n","index":0},{"name":"condition","content":"package inventory\r\n\r\npredicate isHoldingItem($item, $count, $data){\r\n    \"condition\": \"minecraft:entity_properties\",\r\n    \"entity\": \"this\",\r\n    \"predicate\": {\r\n        \"equipment\": {\r\n            \"mainhand\": {\r\n            \"items\":[\"minecraft:$item\"],\r\n                \"count\": $count,\r\n                \"nbt\": \"$data\"\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\npredicate isHoldingItem($item, $data){\r\n    \"condition\": \"minecraft:entity_properties\",\r\n    \"entity\": \"this\",\r\n    \"predicate\": {\r\n        \"equipment\": {\r\n            \"mainhand\": {\r\n            \"items\":[\"minecraft:$item\"],\r\n                \"nbt\": \"$data\"\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\npredicate isHoldingItem($item){\r\n    \"condition\": \"minecraft:entity_properties\",\r\n    \"entity\": \"this\",\r\n    \"predicate\": {\r\n        \"equipment\": {\r\n            \"mainhand\": {\r\n            \"items\":[\"minecraft:$item\"]\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nbool lazy isHoldingItem(int $item, int $data){\r\n    int slot = @s.slot\r\n    forgenerate($i,0,8){\r\n        if (slot == $i){\r\n            return (isHoldingItemInSlot($i,$item,$data))\r\n        }\r\n    }\r\n}\r\n\r\nbool lazy isHoldingItem(int $item){\r\n    int slot = @s.slot\r\n    forgenerate($i,0,8){\r\n        if (slot == $i){\r\n            return (isHoldingItemInSlot($i,$item))\r\n        }\r\n    }\r\n    return(v)\r\n}\r\n\r\nbool lazy isHoldingItemInSlot(int $slot, int $item, int $data){\r\n    return(false)\r\n        if (@s[nbt={Inventory:[{Slot:$slotb,id:\"minecraft:$item\",tag:$data}]}]){\r\n        return(true)\r\n    }\r\n}\r\n\r\nbool lazy isHoldingItemInSlot(int $slot, int $item){\r\n    return(false)\r\n        if (@s[nbt={Inventory:[{Slot:$slotb,id:\"minecraft:$item\"}]}]){\r\n        return(true)\r\n    }\r\n}\r\n\r\n\r\n\r\nbool lazy isHoldingItemFeet(int $item, int $data){\r\n    return(false)\r\n        if (@s[nbt={Inventory:[{Slot:100b,id:\"minecraft:$item\",tag:$data}]}]){\r\n        return(true)\r\n    }\r\n}\r\n\r\nbool lazy isHoldingItemLegs(int $item, int $data){\r\n    return(false)\r\n        if (@s[nbt={Inventory:[{Slot:101b,id:\"minecraft:$item\",tag:$data}]}]){\r\n        return(true)\r\n    }\r\n}\r\n\r\nbool lazy isHoldingItemChest(int $item, int $data){\r\n    return(false)\r\n        if (@s[nbt={Inventory:[{Slot:102b,id:\"minecraft:$item\",tag:$data}]}]){\r\n        return(true)\r\n    }\r\n}\r\n\r\nbool lazy isHoldingItemHead(int $item, int $data){\r\n    return(false)\r\n        if (@s[nbt={Inventory:[{Slot:103b,id:\"minecraft:$item\",tag:$data}]}]){\r\n        return(true)\r\n    }\r\n}\r\n\r\nbool lazy isHoldingItemOffHand(int $item, int $data){\r\n    return(false)\r\n        if (@s[nbt={Inventory:[{Slot:-106b,id:\"minecraft:$item\",tag:$data}]}]){\r\n        return(true)\r\n    }\r\n}\r\n","index":0},{"name":"items","content":"package item\r\n\r\ndef lazy summon(int $name, int $count, int $data){\r\n    /summon item ~ ~1 ~ {Item:{id:\"minecraft:$name\",Count:$countb,tag:$data}}\r\n}\r\n\r\ndef lazy summon(int $name, int $data){\r\n    /summon item ~ ~1 ~ {Item:{id:\"minecraft:$name\",Count:1b,tag:$data}}\r\n}\r\n\r\ndef lazy summon(int $name){\r\n    /summon item ~ ~1 ~ {Item:{id:\"minecraft:$name\"}}\r\n}","index":0},{"name":"other","content":"package inventory\n\ndef clearEnderChest(){\n    forgenerate($i,0,26){\n        setSlot(enderchest.$i,air)\n    }\n}\n\ndef lazy setEnderChest(int $item, int $count){\n    forgenerate($i,0,26){\n        setSlot(enderchest.$i,$item)\n    }\n}\n\ndef lazy setEnderChest(int $item){\n    setEnderChest($item,1)\n}\n\ndef clearHotBar(){\n    forgenerate($i,0,8){\n        setSlot(hotbar.$i,air)\n    }\n}","index":0}],"resources":[],"TagsList":{"blocks":{},"functions":{}},"mcTagsList":{"blocks":{},"functions":{"load":{"values":["load"]},"tick":{"values":["main"]}}},"compileOrder":[],"version":{"major":1,"minor":0,"patch":0,"build":19},"compilationSetting":{"TreeMaxSize":20,"FloatPrecision":1000,"removeUselessFile":true,"offuscate":true,"scoreboardValue":"tbms.value","scoreboardConst":"tbms.const","scoreboardTmp":"tbms.tmp","tagsFolder":true,"forcedOffuscation":{},"libraryFolder":["./lib/1_16_5/"],"MCVersion":"1.16.5","ExportAsZip":false,"packformat":6,"rppackformat":7,"CompilerCoreName":"java","Authors":"","generateMAPSFile":true,"generateREADMEFile":true,"opti_FunctionTagsReplace":true,"opti_ExportComment":false,"opti_ShowException":true,"opti_ShowDebug":true,"isLibrary":false}}