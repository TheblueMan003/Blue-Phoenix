{"projectName":"villager","datapackDirectory":null,"resourcesPackDirectory":null,"offuscate":true,"isLibrary":true,"description":"","files":[{"name":"import","content":"import standard.java\nimport standard.entity_id\nimport standard.object","index":0},{"name":"villager","content":"package villager\n\nlazy setJobSite(int $x, int $y, int $z){\n    data.set({Brain: {memories: {\"minecraft:job_site\": {value: {pos: [I; $x, $y, $z], dimension: \"minecraft:overworld\"}}}}})\n}\n\nlazy setJobSite(int $x, int $y, int $z, int $dim){\n    data.set({Brain: {memories: {\"minecraft:job_site\": {value: {pos: [I; $x, $y, $z], dimension: \"$dim\"}}}}})\n}\n\nlazy clearTrade(){\n    data.set({Offers:{Recipes:[]}})\n}\n\n\nlazy addTrade(int $item1, int $count1, int $res, int $countr){\n    /data modify entity @s Offers.Recipes append value {maxUses: 999999, buyB: {id: \"minecraft:air\", Count: 1b}, buy: {id: \"minecraft:$item1\", Count: $count1b}, sell: {id: \"minecraft:$res\", Count: $countrb}}\n}\nlazy addTrade(int $max, int $item1, int $count1, int $res, int $countr){\n    /data modify entity @s Offers.Recipes append value {maxUses: $max, buyB: {id: \"minecraft:air\", Count: 1b}, buy: {id: \"minecraft:$item1\", Count: $count1b}, sell: {id: \"minecraft:$res\", Count: $countrb}}\n}\nlazy addTrade(int $item1, int $count1,int $item2, int $count2, int $res, int $countr){\n    /data modify entity @s Offers.Recipes append value {maxUses: 999999, buyB: {id: \"minecraft:$item2\", Count: $count2b}, buy: {id: \"minecraft:$item1\", Count: $count1b}, sell: {id: \"minecraft:$res\", Count: $countrb}}\n}\nlazy addTrade(int $max, int $item1, int $count1,int $item2, int $count2, int $res, int $countr){\n    /data modify entity @s Offers.Recipes append value {maxUses: $max, buyB: {id: \"minecraft:$item2\", Count: $count2b}, buy: {id: \"minecraft:$item1\", Count: $count1b}, sell: {id: \"minecraft:$res\", Count: $countrb}}\n}\n\nlazy setProfession(int $prof){\n    data.set({VillagerData: {profession: \"minecraft:$prof\"}})\n}\nlazy setLevel(int $level){\n    data.set({VillagerData: {level: $level}})\n}\nlazy setBiome(int $biome){\n    data.set({VillagerData: {type: \"minecraft:$biome\"}})\n}","index":0}],"resources":[],"TagsList":{"blocks":{},"functions":{}},"mcTagsList":{"blocks":{},"functions":{"load":{"values":["load"]},"tick":{"values":["main"]}}},"compileOrder":[],"version":{"major":1,"minor":0,"patch":0,"build":2},"compilationSetting":{"TreeMaxSize":20,"FloatPrecision":1000,"removeUselessFile":true,"offuscate":true,"randomLambdaID":true,"scoreboardValue":"tbms.value","structuresSource":"","structuresSources":{},"scoreboardConst":"tbms.const","scoreboardTmp":"tbms.tmp","tagsFolder":true,"forcedOffuscation":{},"libraryFolder":["./lib/1_19/","./lib/1_18/","./lib/1_17/","./lib/1_16_5/","./lib/shared/"],"MCVersion":"1.16.5","ExportAsZip":false,"packformat":10,"rppackformat":9,"CompilerCoreName":"java","Authors":"","generateMAPSFile":true,"generateREADMEFile":true,"opti_FunctionTagsReplace":true,"opti_ExportComment":false,"opti_ShowException":true,"opti_ShowDebug":true,"opti_FileCleanUp":true,"opti_LambdaCleanUp":false,"advanced_debug":false,"isLibrary":false}}