{"projectName":"scripted_door","datapackDirectory":null,"resourcesPackDirectory":null,"offuscate":true,"isLibrary":true,"description":"","files":[{"name":"import","content":"import standard.java\nimport standard.entity_id\nimport standard.object","index":0},{"name":"scripted_door","content":"package door\n\n[inplace]\ndef lazy create_door(int $id, int $ori, int $x, int $y, int $z){\n    moving_structure door$id\n    bool state$id := false\n    bool animating$id := false\n    def end_animation$id(){\n        animating$id = false\n    }\n    def open_door$id(){\n        if (!state$id && !animating$id){\n            positioned($x $y $z){\n                door$id = moving_structure(\"door_$ori\", 30, end_animation$id, motion.ysmooth(3,30))\n                door$id.start()\n            }\n            state$id = true\n            animating$id = true\n            sound.playallat(minecraft:block.piston.extend)\n        }\n    }\n    def close_door$id(){\n        if (state$id && !animating$id){\n            positioned($x $eval($y+3) $z){\n                door$id = moving_structure(\"door_$ori\", 30, end_animation$id, motion.ysmooth(-3,30))\n                door$id.start()                \n            }\n            state$id = false\n            animating$id = true\n            sound.playallat(minecraft:block.piston.contract)\n        }\n    }\n    def @resetdoor reset_door$id(){\n        positioned($x $eval($y+3) $z){\n            door$id = moving_structure(\"door_$ori\", 30, pass, motion.ysmooth(-3,30))\n            door$id.start()\n        }\n        state$id = false\n        animating$id = false\n    }\n}\nlazy openNearDoor(int $id, int $min, int $max,int $x, int $y, int $z){\n    def @playertick(){\n        positioned($x $y $z){\n            if(@s[distance=..$min]){\n                open_door$id()\n            }\n            if(!@s[distance=..$max]){\n                close_door$id()\n            }\n        }\n    }\n}\nlazy autoDoor(int $ori, int $x, int $y, int $z){\n    create_door(automatic,$ori, $x, $y, $z)\n    openNearDoor(automatic, 10,15,$x, $y, $z)\n}\ndef @reset(){\n    @resetdoor()\n}","index":0}],"resources":[],"TagsList":{"blocks":{},"functions":{}},"mcTagsList":{"blocks":{},"functions":{"load":{"values":["load"]},"tick":{"values":["main"]}}},"compileOrder":[],"version":{"major":1,"minor":0,"patch":0,"build":0},"compilationSetting":{"TreeMaxSize":20,"FloatPrecision":1000,"removeUselessFile":true,"offuscate":true,"randomLambdaID":true,"scoreboardValue":"tbms.value","structuresSource":"","structuresSources":{},"scoreboardConst":"tbms.const","scoreboardTmp":"tbms.tmp","tagsFolder":true,"forcedOffuscation":{},"libraryFolder":["./lib/1_17/","./lib/1_16_5/","./lib/shared/"],"MCVersion":"1.16.5","ExportAsZip":false,"packformat":8,"rppackformat":8,"CompilerCoreName":"java","Authors":"","generateMAPSFile":true,"generateREADMEFile":true,"opti_FunctionTagsReplace":true,"opti_ExportComment":false,"opti_ShowException":true,"opti_ShowDebug":true,"opti_FileCleanUp":true,"opti_LambdaCleanUp":false,"advanced_debug":false,"isLibrary":false}}