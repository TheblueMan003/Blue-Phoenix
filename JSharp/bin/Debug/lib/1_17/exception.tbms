{"projectName":"exception","datapackDirectory":null,"offuscate":false,"files":[{"name":"import","content":"\n","index":0},{"name":"array","content":"package exception\n\ndef exceptionLoop(){\n\texceptionLoop()\n}\n\ndef exceptionManager(){\n\texceptionLoop()\n}\n\nint id\n\ndef indexOutOfBound(int i, int size){\n\tid++\n\ttellraw(@a,(\"[ TBMS ] Error #\",dark_red),(id, red),(\": Index \",dark_red),(i),(\" out of bound for object of size \",dark_red),(size,dark_red))\n\texceptionManager()\n}\n\ndef illegalOperation(string text = \"\"){\n\tid++\n\ttellraw(@a,(\"[ TBMS ] Error #\",dark_red),(id, red),(\": Illegal Operation: \",dark_red),(text, red))\n\texceptionManager()\n}\n\ndef invalidArgument(string text=\"\"){\n\tid++\n\ttellraw(@a,(\"[ TBMS ] Error #\",dark_red),(id, red),(\": Invalid argument int args:\",dark_red),(text, red))\n\texceptionManager()\n}\n\ndef stackOverflow(string text=\"\"){\n\tid++\n\ttellraw(@a,(\"[ TBMS ] Error #\",dark_red),(id, red),(\": Stack Overflow: \",dark_red),(text, red))\n\texceptionManager()\n}\n\ndef stackUnderflow(string text=\"\"){\n\tid++\n\ttellraw(@a,(\"[ TBMS ] Error #\",dark_red),(id, red),(\": Stack Underflow: \",dark_red),(text, red))\n\texceptionManager()\n}","index":0},{"name":"argCheck","content":"package exception\n\ndef intArgCheck(int i, int min, int max){\n\tif (i < min){\n\t\tinvalidArgument(\"Argument smaller than allowed.\")\n\t}\n\tif (i >= max){\n\t\tinvalidArgument(\"Argument bigger than allowed.\")\n\t}\n}\n\ndef floatArgCheck(float i, float min, float max){\n\tif (i < min){\n\t\tinvalidArgument(\"Argument smaller than allowed.\")\n\t}\n\tif (i >= max){\n\t\tinvalidArgument(\"Argument bigger than allowed.\")\n\t}\n}","index":0}],"TagsList":{"blocks":{},"functions":{}},"mcTagsList":{"blocks":{},"functions":{"load":{"values":[]},"tick":{"values":[]}}}}