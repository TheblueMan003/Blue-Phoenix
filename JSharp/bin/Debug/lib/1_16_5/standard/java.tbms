{"projectName":"java","datapackDirectory":null,"resourcesPackDirectory":null,"offuscate":false,"isLibrary":false,"description":"Made With BluePhoenix","files":[{"name":"import","content":"\r\n","index":0},{"name":"at","content":"package .\n\ndef lazy @__numerical_only__ __at__(float $x, float $y, float $z, function $action){\n\t/execute positioned $x $y $z run function $action.name\n}\n\ndef lazy at(entity $value, function $action){\n\t/execute at $value run function $action.name\n}\n\ndef lazy at(float __x, float __y, float __z, function $action){\n\t/summon area_effect_cloud ~ ~3 ~ {Radius:0f,Duration:999,Tags:[\"at_trg\",\"cur_at_trg\"]}\n\t@e[tag=cur_at_trg].x = __x\n\t@e[tag=cur_at_trg].y = __y\n\t@e[tag=cur_at_trg].z = __z\n\tat(@e[tag=cur_at_trg]){\n\t\tuntag(@e[tag=cur_at_trg],cur_at_trg)\n\t\t$action()\n\t}\n\tkill(@e[tag=at_trg])\n}\n\ndef lazy @__numerical_only__ __positioned__(float $x, float $y, float $z, function $action){\n\t/execute positioned $x $y $z run function $action.name\n}\n\ndef lazy positioned(entity $value, function $action){\n\t/execute at $value run function $action.name\n}\n\ndef lazy positioned(float __x, float __y, float __z, function $action){\n\t/summon area_effect_cloud ~ ~3 ~ {Radius:0f,Duration:999,Tags:[\"at_trg\",\"cur_at_trg\"]}\n\t@e[tag=cur_at_trg].x = __x\n\t@e[tag=cur_at_trg].y = __y\n\t@e[tag=cur_at_trg].z = __z\n\tat(@e[tag=cur_at_trg]){\n\t\tuntag(@e[tag=cur_at_trg],cur_at_trg)\n\t\t$action()\n\t}\n\tkill(@e[tag=at_trg])\n}","index":0},{"name":"clone","content":"package .\n\ndef lazy clone(string $value){\n\t/clone $value\n}\n\ndef lazy fill(int sx, int sy, int sz, int ex, int ey, int ez, int $block){\n\tint dx, dy, dz\n\tif (sx > ex){\n\t\tdx = sx\n\t\tsx = ex\n\t\tex = dx\n\t}\n\tif (sy > ey){\n\t\tdy = sy\n\t\tsy = ey\n\t\tey = dy\n\t}\n\tif (sz > ez){\n\t\tdz = sz\n\t\tsz = ez\n\t\tez = dz\n\t}\n\t/summon area_effect_cloud ~ ~3 ~ {Particle:mobSpell,Radius:0f,Duration:999,Tags:[\"fill_trg\"]}\n\t\n\tfor(int x = sx;x <= ex;x++){\n\t\t@e[tag=fill_trg].x = x\n\t\tfor(int y = sy;y <= ey;y++){\n\t\t\t@e[tag=fill_trg].y = y\n\t\t\tfor(int z = sz;z <= ez;z++){\n\t\t\t\t@e[tag=fill_trg].z = z\n\t\t\t\tat(@e[tag=fill_trg,limit=1]){\n\t\t\t\t\t/setblock ~ ~ ~ $block\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tkill(@e[tag=fill_trg])\n}\n\ndef lazy setblock(int x, int y, int z, int $block){\n\t/summon area_effect_cloud ~ ~3 ~ {Particle:mobSpell,Radius:0f,Duration:999,Tags:[\"fill_trg\"]}\n\t\n\t@e[tag=fill_trg].x = x\n\t@e[tag=fill_trg].y = y\n\t@e[tag=fill_trg].z = z\n\tat(@e[tag=fill_trg,limit=1]){\n\t\t/setblock ~ ~ ~ $block\n\t}\n\tkill(@e[tag=fill_trg])\n}","index":0},{"name":"constant","content":"package .\n\nconst bool true = true\nconst bool false = false\n\npackage int\n\nconst int minValue = -2147483648\nconst int maxValue = 2147483647\n","index":0},{"name":"rotated","content":"package .\n\ndef lazy facing(string $value, function $val){\n\t/execute facing entity $value feet run function $val.name\n}\n\ndef lazy facing(string $value, int $eyes, function $val){\n\t/execute facing entity $value $eyes run function $val.name\n}\n\ndef lazy @__numerical_only__ facing(int $x,int $y, int $z, function $val){\n\t/execute facing $x $y $z run function $val.name\n}\n\ndef lazy facing(int $x,int $y, int $z, function $val){\n\tat($x,$y,$z){\n\t\t/execute facing ~ ~ ~ run function $val.name\n\t}\n}\n\ndef lazy rotated(string $value, function $val){\n\t/execute rotated $value run function $val.name\n}","index":0},{"name":"version","content":"package .\r\n\r\ndef lazy __version__(){\r\n    tellraw(@a,(\"═════[ \",blue),(\"$projectName\",aqua),(\" ]═════\",blue))\r\n    tellraw(@a,(\"Version:\",blue),(\" $projectVersion\",aqua))\r\n    tellraw(@a,(\"Made with:\",blue),(\" BluePhoenix\",aqua))\r\n    tellraw(@a,(\"Compiler Core:\",blue),(\" Java 1.16.5\",aqua))\r\n    tellraw(@a,(\"════════════════════\",blue))\r\n}\r\ndef helper version(){\r\n    __version__()\r\n}","index":0},{"name":"store","content":"package .\n\ndef lazy cmdstore(int $var, int $cmd){\n\t/execute store result score $var.scoreboard run $cmd\n}\ndef lazy cmdstore(int $cmd):int{\n\tint count = 0\n\tdefine $var = count\n\t/execute store result score $var.scoreboard run $cmd\n\treturn(count)\n}\n\n\ndef lazy print(json $text){\n\t/tellraw @a $text\n}\n\ndef null(){\n\t\n}","index":0},{"name":"repeat","content":"package .\n\ndef lazy repeat(int $n,function $f){\n\tfor(int i = 0;i < $n;i++){\n\t\t$f()\t\n\t}\n}","index":0},{"name":"forceload","content":"package .\n\ndef lazy forceload(int $x1, int $z1, int $x2, int $z2){\n\t/forceload add $x1 $z1 $x2 $z2\n}\n\ndef lazy forceunload(int $x1, int $z1, int $x2, int $z2){\n\t/forceload remove $x1 $z1 $x2 $z2\n}\n\ndef lazy forceload(int $x1, int $y1, int $z1, int $x2, int $y2, int $z2){\n\t/forceload add $x1 $z1 $x2 $z2\n}\n\ndef lazy forceunload(int $x1, int $y1, int $z1, int $x2, int $y2, int $z2){\n\t/forceload remove $x1 $z1 $x2 $z2\n}","index":0},{"name":"tag","content":"package .\n\ndef lazy tag(int $tag){\n\t/tag @s add $tag\n}\n\ndef lazy tag(entity $entity, int $tag){\n\t/tag $entity add $tag\n}\n\ndef lazy untag(int $tag){\n\t/tag @s remove $tag\n}\n\ndef lazy untag(entity $entity, int $tag){\n\t/tag $entity remove $tag\n}\n\ndef lazy unitag(int $tag){\n\t/tag @e remove $tag\n\t/tag @s add $tag\n}\n\ndef lazy unitag(entity $entity, int $tag){\n\t/tag @e remove $tag\n\t/tag $entity add $tag\n}","index":0},{"name":"kill","content":"package .\n\ndef lazy kill(entity $entity){\n\t/kill $entity\n}\n\ndef lazy kill(){\n\t/kill @s\n}\n\ndef lazy spawnpoint(){\n\t/spawnpoint @s ~ ~ ~ ~\n}\n\ndef lazy spawnpoint(entity $entity){\n\t/spawnpoint $entity ~ ~ ~ ~\n}\n\ndef lazy spawnpoint(int $x, int $y, int $z){\n\t/spawnpoint @s $x $y $z\n}\n\ndef lazy spawnpoint(entity $entity,int $x, int $y, int $z){\n\t/spawnpoint $entity $x $y $z ~\n}\n\ndef lazy spawnpoint(entity $entity,int $x, int $y, int $z, int $u){\n\t/spawnpoint $entity $x $y $z $u\n}","index":0},{"name":"block","content":"package .\n\ndef lazy setblock(int $block){\n\t/setblock ~ ~ ~ $block\t\n}\n\ndef lazy setblock(int $x, int $y, int $z, int $block){\n\t/setblock $x $y $z $block\t\n}\n\ndef lazy setblock(int $x, int $y, int $z, int $block, int $para){\n\t/setblock $x $y $z $block $para\n}","index":0},{"name":"clear","content":"package .\n\ndef lazy clear(){\n\t/clear @s\n}\n\ndef lazy clear(entity $entity){\n\t/clear $entity\n}\n\ndef lazy clear(entity $entity, int $item){\n\t/clear $entity $item\n}\n\ndef lazy clear(entity $entity, int $item, int $count){\n\t/clear $entity $item $count\n}\n\ndef lazy give(int $item){\n\t/give @s $item\n}\n\ndef lazy give(int $item, int $count){\n\t/give @s $item $count\n}\n\ndef lazy give(entity $entity, int $item, int $count){\n\t/give $entity $item $count\n}","index":0},{"name":"data","content":"package data\n\ndef lazy set(entity $e, int $data){\n\t/data merge entity $e $data\n}\n\ndef lazy set(int $data){\n\tdata.set(@s,$data)\n}\n\ndef lazy copyFromToPath(entity $e1, int $path1, entity $e2, int $path2){\n\t/data modify entity $e $path1 set from entity $e2 $path2\n}\n\ndef lazy copyFromToPath(int $path1, entity $e2, int $path2){\n\tcopyFromToPath(@s, $path1, $e2, $path2)\n}\n\ndef lazy copyFrom(entity $e2, int $path){\n\tcopyFromToPath(@s, $path, $e2, $path)\n}\n\ndef lazy copyFrom(entity $e1, entity $e2,int $path){\n\tcopyFromToPath($e1, $path, $e2, $path)\n}","index":0},{"name":"predicate","content":"package .\n\npredicate nbt($i){\n\t\"condition\": \"minecraft:entity_properties\",\n\t\"entity\": \"this\",\n\t\"predicate\": {\n\t\t\"nbt\": \"$i\"\n\t}\n}\n\npredicate type($i){\n\t\"condition\": \"minecraft:entity_properties\",\n\t\"entity\": \"this\",\n\t\"predicate\": {\n\t\t\"type\": \"$i\"\n\t}\n}\n\npredicate team($i){\n\t\"condition\": \"minecraft:entity_properties\",\n\t\"entity\": \"this\",\n\t\"predicate\": {\n\t\t\"team\": \"$i\"\n\t}\n}\n\npredicate effect($effect){\n  \"condition\": \"minecraft:entity_properties\",\n  \"entity\": \"this\",\n  \"predicate\": {\n    \"effects\": {\n      \"minecraft:$effect\": {}\n    }\n  }\n}\n\npredicate effect($effect, $amplifier){\n  \"condition\": \"minecraft:entity_properties\",\n  \"entity\": \"this\",\n  \"predicate\": {\n    \"effects\": {\n      \"minecraft:$effect\": {\"amplifier\": $amplifier}\n    }\n  }\n}\n\npredicate effect($effect, $amplifier, $duration){\n  \"condition\": \"minecraft:entity_properties\",\n  \"entity\": \"this\",\n  \"predicate\": {\n    \"effects\": {\n      \"minecraft:$effect\": {\"amplifier\": $amplifier, \"duration\": $duration}\n    }\n  }\n}\n\npredicate effect($effect, $amplifier, $duration, $visible){\n  \"condition\": \"minecraft:entity_properties\",\n  \"entity\": \"this\",\n  \"predicate\": {\n    \"effects\": {\n      \"minecraft:$effect\": {\"amplifier\": $amplifier, \"duration\": $duration, \"visible\": $visible}\n    }\n  }\n}\n","index":0}],"resources":[],"TagsList":{"blocks":{},"functions":{}},"mcTagsList":{"blocks":{},"functions":{"load":{"values":["load"]},"tick":{"values":["main"]}}},"compileOrder":[],"version":{"major":1,"minor":0,"patch":0,"build":72},"compilationSetting":{"TreeMaxSize":20,"FloatPrecision":1000,"removeUselessFile":true,"offuscate":true,"scoreboardValue":"tbms.value","scoreboardConst":"tbms.const","scoreboardTmp":"tbms.tmp","tagsFolder":true,"forcedOffuscation":{},"libraryFolder":["./lib/1_16_5/","./lib/shared/"],"MCVersion":"1.16.5","ExportAsZip":false,"packformat":6,"CompilerCoreName":"java","isLibrary":false}}