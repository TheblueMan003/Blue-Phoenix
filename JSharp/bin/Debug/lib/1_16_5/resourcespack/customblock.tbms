{"projectName":"customblock","datapackDirectory":null,"resourcesPackDirectory":null,"offuscate":true,"isLibrary":true,"description":"","files":[{"name":"import","content":"import standard.java\nimport standard.entity_id\nimport standard.object\nimport resourcespack.models","index":0},{"name":"customblock","content":"package customblock\n\nenum noteblockinstrument = harp, pling, banjo, bit, didgeridoo, cow_bell, iron_xylophone, xylophone, chime, guitar, bell, flute, bass, hat, snare, basedrum\nenum noteblockinstrumentblock = air, glowstone, hay_block, emerald_block, pumpkin, soul_sand, iron_block, bone_block, packed_ice, white_wool, gold_block, clay, oak_planks, glass, sand, stone\n[inplace]\ndef lazy add(int $name, int $model){\n    enum customblockmodels(json model) = $name($model)\n}\n\ndef lazy generate(){\n    define json $data = {}\n    forgenerate($j, 0, $eval(24*16-1)){\n        define int $note = $eval($j.index%24)\n        define int $instrument = fromenum(noteblockinstrument, $eval($j.index|24))\n        define json $data += {\"note=$note,instrument=$instrument\": {\"model\": \"block/note_block\"}}\n    }\n    forgenerate($j, customblockmodels){\n        define int $note = $eval($j.index%24)\n        define int $instrument = fromenum(noteblockinstrument, $eval($j.index|24))\n        define json $data += {\"note=$note,instrument=$instrument\": {\"model\": $j.model}}\n    }\n    \n    jsonfile note_block{\n        \"variants\": $data\n    }\n}\n\ndef lazy cube_block(int $name, int $texture){\n    jsonfile $name{\n        \"parent\": \"minecraft:block/cube_all\",\n        \"textures\": {\n            \"all\": $texture\n        }\n    }\n}\n\n[inplace]\ndef lazy add(int $block, int $state, int $name, int $model){\n    enum customblockmodels_$block(json model,json state, json rot) = $name($model, $state, 0)\n}\n[inplace]\ndef lazy add(int $block, int $state, int $name, int $model, int $rot){\n    enum customblockmodels_$block(json model,json state, json rot) = $name($model, $state, $rot)\n}\n\ndef lazy generate(int $block){\n    define json $data = {}\n    forgenerate($j, customblockmodels_$block){\n        define json $data += {$j.state: {\"model\": $j.model, \"y\": $j.rot}}\n    }\n    \n    jsonfile $block{\n        \"variants\": $data\n    }\n}","index":0}],"resources":[],"TagsList":{"blocks":{},"functions":{}},"mcTagsList":{"blocks":{},"functions":{"load":{"values":["load"]},"tick":{"values":["main"]}}},"compileOrder":[],"version":{"major":1,"minor":0,"patch":0,"build":4},"compilationSetting":{"TreeMaxSize":20,"FloatPrecision":1000,"removeUselessFile":true,"offuscate":true,"randomLambdaID":true,"scoreboardValue":"tbms.value","scoreboardConst":"tbms.const","scoreboardTmp":"tbms.tmp","tagsFolder":true,"forcedOffuscation":{},"libraryFolder":["./lib/1_17/","./lib/1_16_5/","./lib/shared/"],"MCVersion":"1.16.5","ExportAsZip":false,"packformat":8,"rppackformat":8,"CompilerCoreName":"java","Authors":"","generateMAPSFile":true,"generateREADMEFile":true,"opti_FunctionTagsReplace":true,"opti_ExportComment":false,"opti_ShowException":true,"opti_ShowDebug":true,"opti_FileCleanUp":true,"advanced_debug":false,"isLibrary":false}}