{"projectName":"snakeparkour","datapackDirectory":null,"resourcesPackDirectory":null,"offuscate":true,"isLibrary":true,"description":"Made With BluePhoenix","files":[{"name":"import","content":"\r\n","index":0},{"name":"snake","content":"package parkour_snake\r\n\r\nenum snakeBlock = white, red, orange, yellow, lime, green, light_blue, aqua, blue, purple, magenta, brown, black, pink, light_gray, gray, cyan, barrier\r\nINT SnakeID\r\nINT Speed\r\nINT Delay\r\nINT Length\r\nSNAKEBLOCK Block1\r\nSNAKEBLOCK Block2\r\n\r\ndef newSnake(snakeBlock b1, snakeBlock b2, int speed, int length){\r\n    /summon armor_stand ~ ~ ~ {Tags:[\"snakeHead\",\"trg\"],Invisible:1,NoGravity:1}\r\n    /summon armor_stand ~ ~ ~ {Tags:[\"snakeTail\",\"trg\"],Invisible:1,NoGravity:1}\r\n    with(@e[tag=trg]){\r\n        SnakeID = 0\r\n        Delay = 0\r\n        Length = length\r\n        Speed = speed\r\n        Block1 = b1\r\n        Block2 = b2\r\n        untag(@s,trg)\r\n    }\r\n}\r\nalias createSnake as newSnake","index":0},{"name":"snake_block","content":"package parkour_snake\r\n\r\nblocktags snake_block{\r\n    minecraft:white_wool,\r\n    minecraft:red_wool,\r\n    minecraft:orange_wool,\r\n    minecraft:yellow_wool,\r\n    minecraft:lime_wool,\r\n    minecraft:green_wool,\r\n    minecraft:blue_wool,\r\n    minecraft:light_blue_wool,\r\n    minecraft:cyan_wool,\r\n    minecraft:blue_wool,\r\n    minecraft:purple_wool,\r\n    minecraft:magenta_wool,\r\n    minecraft:pink_wool,\r\n    minecraft:brown_wool,\r\n    minecraft:black_wool,\r\n    minecraft:light_gray_wool,\r\n    minecraft:gray_wool\r\n}","index":0},{"name":"snake_head","content":"package parkour_snake\r\n\r\ndef setSnakeBlock(){\r\n    SnakeID = (SnakeID + 1) \r\n    SnakeID %= 2\r\n    snakeBlock block\r\n    if (SnakeID == 0){\r\n        block = Block1\r\n    }\r\n    if (SnakeID == 1){\r\n        block = Block2\r\n    }\r\n    switch(block){\r\n        white -> setblock(~ ~ ~ white_wool)\r\n        red -> setblock(~ ~ ~ red_wool)\r\n        orange -> setblock(~ ~ ~ orange_wool)\r\n        yellow -> setblock(~ ~ ~ yellow_wool)\r\n        lime -> setblock(~ ~ ~ lime_wool)\r\n        green -> setblock(~ ~ ~ green_wool)\r\n        light_blue -> setblock(~ ~ ~ light_blue_wool)\r\n        cyan -> setblock(~ ~ ~ cyan_wool)\r\n        blue -> setblock(~ ~ ~ blue_wool)\r\n        purple -> setblock(~ ~ ~ purple_wool)\r\n        magenta -> setblock(~ ~ ~ magenta_wool)\r\n        pink -> setblock(~ ~ ~ pink_wool)\r\n        gray -> setblock(~ ~ ~ gray_wool)\r\n        light_gray -> setblock(~ ~ ~ light_gray_wool)\r\n        black -> setblock(~ ~ ~ black_wool)\r\n        brown -> setblock(~ ~ ~ brown_wool)\r\n        barrier -> setblock(~ ~ ~ barrier)\r\n    }\r\n}\r\n\r\ndef snakeHeadMain(){\r\n    with(@e[tag=snakeHead],true){\r\n        Delay += Speed\r\n        if(Delay >= 20){\r\n            Delay  = 0\r\n            bool hasMoved = false\r\n            if (block(~1 ~ ~ tripwire) && !hasMoved){\r\n                /tp @s ~1 ~ ~\r\n            at(@s){setSnakeBlock()}\r\n                hasMoved = true\r\n            }\r\n            if (block(~-1 ~ ~ tripwire) && !hasMoved){\r\n                /tp @s ~-1 ~ ~\r\n            at(@s){setSnakeBlock()}\r\n                hasMoved = true\r\n            }\r\n            if (block(~ ~1 ~ tripwire) && !hasMoved){\r\n                /tp @s ~ ~1 ~\r\n            at(@s){setSnakeBlock()}\r\n                hasMoved = true\r\n            }\r\n            if (block(~ ~-1 ~ tripwire) && !hasMoved){\r\n                /tp @s ~ ~-1 ~\r\n            at(@s){setSnakeBlock()}\r\n                hasMoved = true\r\n            }\r\n            if (block(~ ~ ~1 tripwire) && !hasMoved){\r\n                /tp @s ~ ~ ~1\r\n            at(@s){setSnakeBlock()}\r\n                hasMoved = true\r\n            }\r\n            if (block(~ ~ ~-1 tripwire) && !hasMoved){\r\n                /tp @s ~ ~ ~-1\r\n            at(@s){setSnakeBlock()}\r\n                hasMoved = true\r\n            }\r\n            if(!hasMoved){\r\n                kill(@s)\r\n            }\r\n        }\r\n    }\r\n}","index":0},{"name":"snake_tail","content":"package parkour_snake\r\n\r\ndef rmSnakeBlock(){\r\n    setblock(~ ~ ~ tripwire)\r\n}\r\n\r\ndef snakeTailMain(){\r\n    with(@e[tag=snakeTail],true){\r\n        Delay += Speed\r\n        if(Delay >= 20){\r\n            Delay  = 0\r\n            Length--\r\n            if (Length < 0){\r\n                bool hasMoved = false\r\n                if (block(~1 ~ ~ #snake_block) && !hasMoved){\r\n                    /tp @s ~1 ~ ~\r\n                at(@s){rmSnakeBlock()}\r\n                    hasMoved = true\r\n                }\r\n                if (block(~-1 ~ ~ #snake_block) && !hasMoved){\r\n                    /tp @s ~-1 ~ ~\r\n                at(@s){rmSnakeBlock()}\r\n                    hasMoved = true\r\n                }\r\n                if (block(~ ~1 ~ #snake_block) && !hasMoved){\r\n                    /tp @s ~ ~1 ~\r\n                at(@s){rmSnakeBlock()}\r\n                    hasMoved = true\r\n                }\r\n                if (block(~ ~-1 ~ #snake_block) && !hasMoved){\r\n                    /tp @s ~ ~-1 ~\r\n                at(@s){rmSnakeBlock()}\r\n                    hasMoved = true\r\n                }\r\n                if (block(~ ~ ~1 #snake_block) && !hasMoved){\r\n                    /tp @s ~ ~ ~1\r\n                at(@s){rmSnakeBlock()}\r\n                    hasMoved = true\r\n                }\r\n                if (block(~ ~ ~-1 #snake_block) && !hasMoved){\r\n                    /tp @s ~ ~ ~-1\r\n                at(@s){rmSnakeBlock()}\r\n                    hasMoved = true\r\n                }\r\n                if(!hasMoved){\r\n                    kill(@s)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","index":0},{"name":"snake_main","content":"package parkour_snake\r\n\r\ndef main(){\r\n    snakeHeadMain()\r\n    snakeTailMain()\r\n}","index":0}],"resources":[],"TagsList":{"blocks":{},"functions":{}},"mcTagsList":{"blocks":{},"functions":{"load":{"values":["load"]},"tick":{"values":["main"]}}},"compileOrder":[],"version":{"major":1,"minor":0,"patch":0,"build":10},"compilationSetting":{"TreeMaxSize":20,"FloatPrecision":1000,"removeUselessFile":true,"offuscate":true,"scoreboardValue":"tbms.value","scoreboardConst":"tbms.const","scoreboardTmp":"tbms.tmp","tagsFolder":true,"forcedOffuscation":{},"libraryFolder":["./lib/1_16_5/","./lib/shared/"],"MCVersion":"1.17","ExportAsZip":false,"packformat":6,"rppackformat":7,"CompilerCoreName":"java","Authors":"","generateMAPSFile":true,"generateREADMEFile":true,"opti_FunctionTagsReplace":true,"opti_ExportComment":false,"isLibrary":false}}