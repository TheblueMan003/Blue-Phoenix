{"projectName":"item","datapackDirectory":null,"resourcesPackDirectory":null,"offuscate":true,"isLibrary":true,"description":"","files":[{"name":"import","content":"import standard.java\nimport standard.entity_id\nimport standard.object\nimport inventory","index":0},{"name":"item","content":"package items\n\n\nlazy new(int $name, int $item){\n    enum __custom_item_data__(json data)=$name({})\n    enum __custom_item_item__(json data)=$name($item)\n}\nlazy addNbt(int $name, int $nbt){\n    define int $elt = fromenum(__custom_item_data__, $name)\n    define int $ext2 = $elt.data\n    define json $ext2 += $nbt\n    enum __custom_item_data__(json data)=$name($ext2)\n}\nlazy setName(int $name, json $extra){\n    addNbt($name, {display:{Name:'$extra'}})\n}\nlazy setUnbreakable(int $name){\n    addNbt($name, {Unbreakable:1})\n}\nlazy setDamage(int $name, int $nb){\n    addNbt($name, {Damage:$nb})\n}\nlazy setRepairCost(int $name, int $nb){\n    addNbt($name, {RepairCost:$nb})\n}\nlazy setCustomModelData(int $name, int $nb){\n    addNbt($name, {CustomModelData:$nb})\n}\n\n\nlazy addLore(int $name, json $extra){\n    addNbt($name, {display:{Lore:['$extra']}})\n}\nlazy addEnchantment(int $name, int $name, int $level){\n    addNbt($name, {Enchantments:[{id:$name,lvl:$level}]})\n}\nlazy addCanPlaceOn(int $name, int $block){\n    addNbt($name, {CanPlaceOn:[$block]})\n}\nlazy addCanDestroy(int $name, int $block){\n    addNbt($name, {CanDestroy:[$block]})\n}\nenum __attributes__(json fun, json att){\n    armor(Armor,generic.armor),\n    armor_toughness(ArmorToughness,generic.armor_toughness),\n    attack_damage(attackdamage,generic.attack_damage),\n    attack_knockback(attackknockback,generic.attack_knockback),\n    attack_speed(attackspeed,generic.attack_speed),\n    flying_speed(flyingspeed,generic.flying_speed),\n    horse_jump_strength(horsejumpstrength,horse.jump_strength),\n    knockback_resistance(knockbackresistance,generic.knockback_resistance),\n    luck(luck,generic.luck),\n    max_health(maxhealth,generic.max_health),\n    follow_range(followrange,generic.follow_range),\n    movement_speed(movementspeed,generic.movement_speed),\n    zombie_spawn_reinforcements(zombiespawnreinforcements,zombie.spawn_reinforcements),\n}\nforgenerate($att,__attributes__){\n    lazy add$att.funcAdditive(int $name, int $block, int $amount){\n        addNbt($name, {AttributeModifiers:[{AttributeName:\"$att.att\",Amount:$amount,Operation:0,Name:\"$att.att\",UUID:[I;-122323,22947,11050,-45894]}]})\n    }\n    lazy add$att.funcMultiply(int $name, int $block, int $amount){\n        addNbt($name, {AttributeModifiers:[{AttributeName:\"$att.att\",Amount:$amount,Operation:1,Name:\"$att.att\",UUID:[I;-122323,22947,11050,-45894]}]})\n    }\n    lazy add$att.funcMultiply2(int $name, int $block, int $amount){\n        addNbt($name, {AttributeModifiers:[{AttributeName:\"$att.att\",Amount:$amount,Operation:2,Name:\"$att.att\",UUID:[I;-122323,22947,11050,-45894]}]})\n    }\n}\n\n\n\nlazy hideAttributes(int $name, int $block){\n    addNbt($name, {HideFlags:2})\n}\n\nlazy give(int $name){\n    define int $elt = fromenum(__custom_item_data__, $name)\n    define int $itm = fromenum(__custom_item_item__, $name)\n    define int $ext1 = $itm.data\n    define int $ext2 = $elt.data\n    /give @s $ext1$ext2\n}","index":0},{"name":"item_give","content":"package items\n\ndef lazy setChest(int $index,int $item, int $count){\n    define int $elt = fromenum(__custom_item_data__, $item)\n    define int $itm = fromenum(__custom_item_item__, $item)\n    define int $ext1 = $itm.data\n    define int $ext2 = $elt.data\n    inventory.setChest($index, $ext1$ext2, $count)\n}\n\ndef lazy setChest(int $index,int $item){\n    define int $elt = fromenum(__custom_item_data__, $item)\n    define int $itm = fromenum(__custom_item_item__, $item)\n    define int $ext1 = $itm.data\n    define int $ext2 = $elt.data\n    inventory.setChest($index, $ext1$ext2)\n}\n\n\ndef lazy setSlot(int $slot,int $item, int $count){\n    define int $elt = fromenum(__custom_item_data__, $item)\n    define int $itm = fromenum(__custom_item_item__, $item)\n    define int $ext1 = $itm.data\n    define int $ext2 = $elt.data\n    inventory.setSlot($slot, $ext1$ext2, $count)\n}\ndef lazy setSlot(int $slot,int $item){\n    define int $elt = fromenum(__custom_item_data__, $item)\n    define int $itm = fromenum(__custom_item_item__, $item)\n    define int $ext1 = $itm.data\n    define int $ext2 = $elt.data\n    inventory.setSlot($slot, $ext1$ext2)\n}\n\ndef lazy setMainHand(int $item, int $count){\n    define int $elt = fromenum(__custom_item_data__, $item)\n    define int $itm = fromenum(__custom_item_item__, $item)\n    define int $ext1 = $itm.data\n    define int $ext2 = $elt.data\n    inventory.setMainHand($ext1$ext2, $count)\n}\n\ndef lazy setMainHand(int $item){\n    define int $elt = fromenum(__custom_item_data__, $item)\n    define int $itm = fromenum(__custom_item_item__, $item)\n    define int $ext1 = $itm.data\n    define int $ext2 = $elt.data\n    inventory.setMainHand($ext1$ext2)\n}\n\ndef lazy setOffHand(int $item, int $count){\n    define int $elt = fromenum(__custom_item_data__, $item)\n    define int $itm = fromenum(__custom_item_item__, $item)\n    define int $ext1 = $itm.data\n    define int $ext2 = $elt.data\n    inventory.setOffHand($ext1$ext2, $count)\n}\n\ndef lazy setOffHand(int $item){\n    define int $elt = fromenum(__custom_item_data__, $item)\n    define int $itm = fromenum(__custom_item_item__, $item)\n    define int $ext1 = $itm.data\n    define int $ext2 = $elt.data\n    inventory.setOffHand($ext1$ext2)\n}\n\ndef lazy setHotbar(int $item, int $count){\n    define int $elt = fromenum(__custom_item_data__, $item)\n    define int $itm = fromenum(__custom_item_item__, $item)\n    define int $ext1 = $itm.data\n    define int $ext2 = $elt.data\n    inventory.setHotbar($ext1$ext2, $count)\n}\n\ndef lazy setHotbar(int $item){\n    define int $elt = fromenum(__custom_item_data__, $item)\n    define int $itm = fromenum(__custom_item_item__, $item)\n    define int $ext1 = $itm.data\n    define int $ext2 = $elt.data\n    inventory.setHotbar($ext1$ext2)\n}\n\ndef lazy setInventorySlot(int $index,int $item,int $count){\n    define int $elt = fromenum(__custom_item_data__, $item)\n    define int $itm = fromenum(__custom_item_item__, $item)\n    define int $ext1 = $itm.data\n    define int $ext2 = $elt.data\n    inventory.setInventorySlot($index, $ext1$ext2, $count)\n}\n\ndef lazy setInventorySlot(int $index,int $item){\n    define int $elt = fromenum(__custom_item_data__, $item)\n    define int $itm = fromenum(__custom_item_item__, $item)\n    define int $ext1 = $itm.data\n    define int $ext2 = $elt.data\n    inventory.setInventorySlot($index, $ext1$ext2)\n}\n\n\n\n\ndef lazy setChestplate(int $item,int $count){\n    define int $elt = fromenum(__custom_item_data__, $item)\n    define int $itm = fromenum(__custom_item_item__, $item)\n    define int $ext1 = $itm.data\n    define int $ext2 = $elt.data\n    inventory.setChestplate($ext1$ext2, $count)\n}\n\ndef lazy setChestplate(int $item){\n    define int $elt = fromenum(__custom_item_data__, $item)\n    define int $itm = fromenum(__custom_item_item__, $item)\n    define int $ext1 = $itm.data\n    define int $ext2 = $elt.data\n    inventory.setChestplate($ext1$ext2)\n}\n\n\n\n\n\ndef lazy setLeggings(int $item,int $count){\n    define int $elt = fromenum(__custom_item_data__, $item)\n    define int $itm = fromenum(__custom_item_item__, $item)\n    define int $ext1 = $itm.data\n    define int $ext2 = $elt.data\n    inventory.setLeggings($ext1$ext2, $count)\n}\n\ndef lazy setLeggings(int $item){\n    define int $elt = fromenum(__custom_item_data__, $item)\n    define int $itm = fromenum(__custom_item_item__, $item)\n    define int $ext1 = $itm.data\n    define int $ext2 = $elt.data\n    inventory.setLeggings($ext1$ext2)\n}\n\nalias setLegs as setLeggings\n\n\n\ndef lazy setHelmet(int $item,int $count){\n    define int $elt = fromenum(__custom_item_data__, $item)\n    define int $itm = fromenum(__custom_item_item__, $item)\n    define int $ext1 = $itm.data\n    define int $ext2 = $elt.data\n    inventory.setHelmet($ext1$ext2, $count)\n}\n\ndef lazy setHelmet(int $item){\n    define int $elt = fromenum(__custom_item_data__, $item)\n    define int $itm = fromenum(__custom_item_item__, $item)\n    define int $ext1 = $itm.data\n    define int $ext2 = $elt.data\n    inventory.setHelmet($ext1$ext2)\n}\n\n\n\nalias setHead as setHelmet\n\ndef lazy setBoots(int $item,int $count){\n    define int $elt = fromenum(__custom_item_data__, $item)\n    define int $itm = fromenum(__custom_item_item__, $item)\n    define int $ext1 = $itm.data\n    define int $ext2 = $elt.data\n    inventory.setBoots($ext1$ext2, $count)\n}\n\ndef lazy setBoots(int $item){\n    define int $elt = fromenum(__custom_item_data__, $item)\n    define int $itm = fromenum(__custom_item_item__, $item)\n    define int $ext1 = $itm.data\n    define int $ext2 = $elt.data\n    inventory.setBoots($ext1$ext2)\n}\n\nalias setFeet as setBoots\n\n\n\ndef lazy setEnderChest(int $index,int $item,int $count){\n    define int $elt = fromenum(__custom_item_data__, $item)\n    define int $itm = fromenum(__custom_item_item__, $item)\n    define int $ext1 = $itm.data\n    define int $ext2 = $elt.data\n    inventory.setEnderChest(enderchest.$index, $ext1$ext2, $count)\n}\n\ndef lazy setEnderChest(int $index,int $item){\n    define int $elt = fromenum(__custom_item_data__, $item)\n    define int $itm = fromenum(__custom_item_item__, $item)\n    define int $ext1 = $itm.data\n    define int $ext2 = $elt.data\n    inventory.setEnderChest(enderchest.$index, $ext1$ext2)\n}\n\n\ndef lazy setHorse(int $index,int $item,int $count){\n    define int $elt = fromenum(__custom_item_data__, $item)\n    define int $itm = fromenum(__custom_item_item__, $item)\n    define int $ext1 = $itm.data\n    define int $ext2 = $elt.data\n    inventory.setHorse(horse.$index, $ext1$ext2, $count)\n}\n\ndef lazy setHorse(int $index,int $item){\n    define int $elt = fromenum(__custom_item_data__, $item)\n    define int $itm = fromenum(__custom_item_item__, $item)\n    define int $ext1 = $itm.data\n    define int $ext2 = $elt.data\n    inventory.setHorse(horse.$index, $ext1$ext2)\n}\n\n","index":0},{"name":"item_item","content":"package items\n\n\ndef lazy summon(int $name, int $count){\n    define int $elt = fromenum(__custom_item_data__, $item)\n    define int $itm = fromenum(__custom_item_item__, $item)\n    define int $ext1 = $itm.data\n    define int $ext2 = $elt.data\n    define int $name = regex($ext1,\"minecraft:\",\"\")\n    /summon item ~ ~1 ~ {Item:{id:\"minecraft:$ext1\",Count:$countb,tag:$ext2}}\n}\n\ndef lazy summon(int $name){\n    define int $elt = fromenum(__custom_item_data__, $item)\n    define int $itm = fromenum(__custom_item_item__, $item)\n    define int $ext1 = $itm.data\n    define int $ext2 = $elt.data\n    define int $name = regex($ext1,\"minecraft:\",\"\")\n    /summon item ~ ~1 ~ {Item:{id:\"minecraft:$ext1\",Count:1b,tag:$ext2}}\n}\n\nlazy bool isNear(int $item, int $radius){\n    define int $elt = fromenum(__custom_item_data__, $item)\n    define int $itm = fromenum(__custom_item_item__, $item)\n    define int $ext1 = $itm.data\n    define int $ext2 = $elt.data\n    define int $name = regex($ext1,\"minecraft:\",\"\")\n    int ret = false\n        if (@e[type=item,distance=..$radius,nbt={Item:{id:\"minecraft:$item\",tag:$ext2}}]){\n        ret = true\n    }\n    return ret\n}\nlazy bool isNear(int $item){\n    define int $elt = fromenum(__custom_item_data__, $item)\n    define int $itm = fromenum(__custom_item_item__, $item)\n    define int $ext1 = $itm.data\n    define int $ext2 = $elt.data\n    define int $name = regex($ext1,\"minecraft:\",\"\")\n    int ret = false\n    if (@e[type=item,distance=..1,nbt={Item:{id:\"minecraft:$item\",tag:$ext2}}]){\n        ret = true\n    }\n    return ret\n}","index":0}],"resources":[],"TagsList":{"blocks":{},"functions":{}},"mcTagsList":{"blocks":{},"functions":{"load":{"values":["load"]},"tick":{"values":["main"]}}},"compileOrder":[],"version":{"major":1,"minor":0,"patch":0,"build":42},"compilationSetting":{"TreeMaxSize":20,"FloatPrecision":1000,"removeUselessFile":true,"offuscate":true,"randomLambdaID":true,"scoreboardValue":"tbms.value","scoreboardConst":"tbms.const","scoreboardTmp":"tbms.tmp","tagsFolder":true,"forcedOffuscation":{},"libraryFolder":["./lib/1_17/","./lib/1_16_5/","./lib/shared/"],"MCVersion":"1.16.5","ExportAsZip":false,"packformat":8,"rppackformat":8,"CompilerCoreName":"java","Authors":"","generateMAPSFile":true,"generateREADMEFile":true,"opti_FunctionTagsReplace":true,"opti_ExportComment":false,"opti_ShowException":true,"opti_ShowDebug":true,"opti_FileCleanUp":true,"opti_LambdaCleanUp":false,"advanced_debug":false,"isLibrary":false}}