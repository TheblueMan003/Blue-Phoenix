{"projectName":"music","datapackDirectory":null,"resourcesPackDirectory":null,"offuscate":true,"isLibrary":true,"description":"Made With BluePhoenix","files":[{"name":"import","content":"import standard.java\nimport standard.entity_id\nimport input","index":0},{"name":"music","content":"package music\n\nenum __track__ = none\n__TRACK__ currTrack\nINT MusicTick\nBOOL Intro\nBOOL Enabled\nBOOL WasStopped\nbool enabled := true\n\n[inplace]\ndef lazy addMusic(int $name,int $file, int $min, int $sec){\n    enum __track__ = $name\n    def invisible play$name(){\n        WasStopped:=false\n        if (currTrack != $name || WasStopped){\n            currTrack = $name\n            MusicTick = 10000000\n            Enabled := true\n            WasStopped = false\n        }\n    }\n    def invisible play$nameForAll(){\n        with(@a,true){\n            play$name()\n        }\n    }\n    def @music_track music$name(){\n        if (currTrack == $name && MusicTick >= $eval(($min*60+$sec)*20)eval$){\n            /stopsound @s record\n            if (enabled && Enabled){\n                /playsound $file record @s ~ ~ ~ 1\n            }\n            MusicTick = 0\n        }\n    }\n}\n[inplace]\ndef lazy addAllMusic(){\n    forgenerate($i, __track__){\n        sounds.music(\"music/$i\")\n    }\n}\n\n[inplace]\ndef lazy addMusic(int $name,int $file, int $length){\n    enum __track__ = $name\n    def invisible play$name(){\n        WasStopped:=false\n        if (currTrack != $name || WasStopped){\n            currTrack = $name\n            MusicTick = 10000000\n            Enabled := true\n            WasStopped = false\n        }\n    }\n    def invisible play$nameForAll(){\n        with(@a,true){\n            play$name()\n        }\n    }\n    def @music_track music$name(){\n        if (currTrack == $name && MusicTick >= $length){\n            /stopsound @s record\n            if (enabled && Enabled){\n                /playsound $file record @s ~ ~ ~ 1\n            }\n            MusicTick = 0\n        }\n    }\n}\n\n[inplace]\ndef lazy addMusic(int $name,int $file_intro, int $file_loop, int $length_intro, int $length_loop){\n    enum __track__ = $name\n    def invisible play$name(){\n        WasStopped:=false\n        if (currTrack != $name || WasStopped){\n            currTrack = $name\n            MusicTick = 0\n            Enabled := true\n            WasStopped = false\n            /stopsound @s record\n            if (enabled && Enabled){\n                /playsound $file_intro record @s ~ ~ ~ 1\n            }\n            Intro = true\n        }\n    }\n    def invisible play$nameForAll(){\n        with(@a,true){\n            play$name()\n        }\n    }\n    def @music_track music$name(){\n        if (currTrack == $name && MusicTick >= $length_loop && !Intro){\n            /stopsound @s record\n            if (enabled && Enabled){\n                /playsound $file_loop record @s ~ ~ ~ 1\n            }\n            MusicTick = 0\n        }\n        if (currTrack == $name && MusicTick >= $length_intro && Intro){\n            /stopsound @s record\n            if (enabled && Enabled){\n                /playsound $file_loop record @s ~ ~ ~ 1\n            }\n            MusicTick = 0\n            Intro = false\n        }\n    }\n}\n\ndef ticking music(){\n    enabled := true\n    if (enabled){\n        with(@a,true){\n            Enabled := true\n            currTrack := -1\n            if (Enabled && currTrack >= 0){\n                MusicTick++\n                @music_track()\n                input.onrelog{\n                    MusicTick = 10000000\n                }\n            }\n        }\n    }\n}\n\ndef stop(){\n    MusicTick = -10000000\n    /stopsound @s record\n    WasStopped = true\n    currTrack = -1\n}\ndef stopForAll(){\n    with(@a){\n        stop()\n    }\n}\n\ndef pause(){\n    MusicTick = -10000000\n    /stopsound @s record\n    WasStopped = true\n}\ndef pauseForAll(){\n    with(@a){\n        pause()\n    }\n}\n\ndef continue(){\n    MusicTick = 10000000\n    WasStopped = false\n}\ndef continueForAll(){\n    with(@a){\n        MusicTick = 10000000\n        WasStopped = false\n    }\n}\n\n\ndef helper disablePlayer(){\n    Enabled = false\n}\ndef helper enablePlayer(){\n    Enabled = true\n}\ndef helper disableGlobal(){\n    enabled = false\n}\ndef helper enableGlobal(){\n    enabled = true\n}","index":0}],"resources":[],"TagsList":{"blocks":{},"functions":{}},"mcTagsList":{"blocks":{},"functions":{"load":{"values":["load"]},"tick":{"values":["main"]}}},"compileOrder":[],"version":{"major":1,"minor":0,"patch":0,"build":13},"compilationSetting":{"TreeMaxSize":20,"FloatPrecision":1000,"removeUselessFile":true,"offuscate":true,"randomLambdaID":false,"scoreboardValue":"tbms.value","scoreboardConst":"tbms.const","scoreboardTmp":"tbms.tmp","tagsFolder":true,"forcedOffuscation":{},"libraryFolder":["./lib/1_16_5/","./lib/shared/"],"MCVersion":"1.16.5","ExportAsZip":false,"packformat":6,"rppackformat":7,"CompilerCoreName":"java","Authors":"","generateMAPSFile":true,"generateREADMEFile":true,"opti_FunctionTagsReplace":true,"opti_ExportComment":false,"opti_ShowException":true,"opti_ShowDebug":true,"opti_FileCleanUp":true,"opti_LambdaCleanUp":false,"advanced_debug":false,"isLibrary":false}}