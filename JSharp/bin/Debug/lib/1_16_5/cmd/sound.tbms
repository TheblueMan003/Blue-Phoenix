{"projectName":"sound","datapackDirectory":null,"resourcesPackDirectory":null,"offuscate":true,"isLibrary":true,"description":"Made With BluePhoenix","files":[{"name":"import","content":"\n","index":0},{"name":"sounds","content":"package sound\n\n\n\ndef lazy play(int $sound, int $volume, int $pitch, int $loc){\n    require $pitch <= 2 \"pitch must be in [0,2]\"\n    require $pitch >= 0 \"pitch must be in [0,2]\"\n    require $volume >= 0 \"volume must be in [0,+inf[\"\n    /playsound $sound $loc @s ~ ~ ~ $volume $pitch\n}\n\ndef lazy play(int $sound, int $volume, int $pitch){\n    play($sound, $volume, $pitch, master)\n}\n\ndef lazy play(int $sound, int $pitch){\n    play($sound, 1, $pitch, master)\n}\n\ndef lazy play(int $sound){\n    play($sound, 1, 1, master)\n}\n\n\ndef lazy playAll(int $sound, int $volume, int $pitch, int $loc){\n    require $pitch <= 2 \"pitch must be in [0,2]\"\n    require $pitch >= 0 \"pitch must be in [0,2]\"\n    require $volume >= 0 \"volume must be in [0,+inf[\"\n    /playsound $sound $loc @a ~ ~ ~ $volume $pitch\n}\n\ndef lazy playAll(int $sound, int $volume, int $pitch){\n    playAll($sound, $volume, $pitch, master)\n}\n\ndef lazy playAll(int $sound, int $pitch){\n    playAll($sound, 1, $pitch, master)\n}\n\ndef lazy playAll(int $sound){\n    playAll($sound, 1, 1, master)\n}\n\n\ndef lazy playAllAt(int $sound, int $volume, int $pitch, int $loc){\n    with(@a,true){\n        play($sound, $volume, $pitch, $loc)\n    }\n}\n\ndef lazy playAllAt(int $sound, int $volume, int $pitch){\n    playAllAt($sound, $volume, $pitch, master)\n}\n\ndef lazy playAllAt(int $sound, int $pitch){\n    playAllAt($sound, 1, $pitch, master)\n}\n\ndef lazy playAllAt(int $sound){\n    playAllAt($sound, 1, 1, master)\n}","index":0},{"name":"quick_sound","content":"package sound\n    \ndef lazy level_up(){\n    play(minecraft:entity.player.levelup,1)\n}\n\ndef lazy anvil_break(){\n    play(minecraft:block.anvil.break,1)\n}\n\ndef lazy anvil_fall(){\n    play(minecraft:block.anvil.fall,1)\n}","index":0},{"name":"notes","content":"package sound.notes\n\ndef lazy banjo(int $pitch){\n    sound.play(minecraft:block.note_block.banjo,1,$pitch)\n}\n\ndef lazy basedrum(int $pitch){\n    sound.play(minecraft:block.note_block.basedrum,1,$pitch)\n}\n\ndef lazy bass(int $pitch){\n    sound.play(minecraft:block.note_block.bass,1,$pitch)\n}\n\ndef lazy bell(int $pitch){\n    sound.play(minecraft:block.note_block.bell,1,$pitch)\n}\n\ndef lazy bit(int $pitch){\n    sound.play(minecraft:block.note_block.bit,1,$pitch)\n}\n\ndef lazy chime(int $pitch){\n    sound.play(minecraft:block.note_block.chime,1,$pitch)\n}\n\ndef lazy cow_bell(int $pitch){\n    sound.play(minecraft:block.note_block.cow_bell,1,$pitch)\n}\n\ndef lazy didgeridoo(int $pitch){\n    sound.play(minecraft:block.note_block.didgeridoo,1,$pitch)\n}\n\ndef lazy flute(int $pitch){\n    sound.play(minecraft:block.note_block.flute,1,$pitch)\n}\n\ndef lazy guitar(int $pitch){\n    sound.play(minecraft:block.note_block.guitar,1,$pitch)\n}\n\ndef lazy harp(int $pitch){\n    sound.play(minecraft:block.note_block.harp,1,$pitch)\n}\n\ndef lazy hat(int $pitch){\n    sound.play(minecraft:block.note_block.hat,1,$pitch)\n}\n\ndef lazy iron_xylophone(int $pitch){\n    sound.play(minecraft:block.note_block.iron_xylophone,1,$pitch)\n}\n\ndef lazy pling(int $pitch){\n    sound.play(minecraft:block.note_block.pling,1,$pitch)\n}\n\ndef lazy snare(int $pitch){\n    sound.play(minecraft:block.note_block.snare,1,$pitch)\n}\n\ndef lazy xylophone(int $pitch){\n    sound.play(minecraft:block.note_block.xylophone,1,$pitch)\n}","index":0},{"name":"effect","content":"package sound\n\ndef lazy pitched(int $sound, int $volume, int $index, int $max, int $base){\n    switch($index){\n        forgenerate($i, 0, $max){\n            $i->sound.playallat($sound,$volume,$eval($base+($i/$max)*(2-$base))eval$)\n        }\n    }\n}\n","index":0}],"resources":[],"TagsList":{"blocks":{},"functions":{}},"mcTagsList":{"blocks":{},"functions":{"load":{"values":["load"]},"tick":{"values":["main"]}}},"compileOrder":[],"version":{"major":1,"minor":0,"patch":0,"build":9},"compilationSetting":{"TreeMaxSize":20,"FloatPrecision":1000,"removeUselessFile":true,"offuscate":true,"randomLambdaID":false,"scoreboardValue":"tbms.value","structuresSource":"","structuresSources":{},"scoreboardConst":"tbms.const","scoreboardTmp":"tbms.tmp","tagsFolder":true,"forcedOffuscation":{},"libraryFolder":["./lib/1_16_5/","./lib/shared/"],"MCVersion":"1.16.5","ExportAsZip":false,"packformat":6,"rppackformat":7,"CompilerCoreName":"java","Authors":"","generateMAPSFile":true,"generateREADMEFile":true,"opti_FunctionTagsReplace":true,"opti_ExportComment":false,"opti_ShowException":true,"opti_ShowDebug":true,"opti_FileCleanUp":true,"opti_LambdaCleanUp":false,"advanced_debug":false,"isLibrary":false}}