{"projectName":"language","datapackDirectory":null,"resourcesPackDirectory":null,"offuscate":true,"isLibrary":true,"description":"","files":[{"name":"import","content":"import standard.java\nimport standard.entity_id\nimport standard.object\nimport cmd.actionbar","index":0},{"name":"language","content":"package language\n\nint language := 0\n\n[inplace]\nlazy generate(params $file){\n    \n    \n    forgenerate($i,$file){\n        enum(\"__language_$i.index__\",$i, \"CSV\")\n    }\n    \n    def lazy printd(int $index){\n        switch(language.language){\n            forgenerate($j,$file){\n                case($j.index){\n                    define int $d = fromenum(__language_$j.index__, $index)\n                    tellraw(@a, $d.value)\n                }\n            }\n        }\n    }\n    def lazy telld(entity $e, int $index){\n        switch(language.language){\n            forgenerate($j,$file){\n                case($j.index){\n                    define int $d = fromenum(__language_$j.index__, $index)\n                    tellraw($e, $d.value)\n                }\n            }\n        }\n    }\n    def lazy telld(int $index){\n        switch(language.language){\n            forgenerate($j,$file){\n                case($j.index){\n                    define int $d = fromenum(__language_$j.index__, $index)\n                    tellraw(@s, $d.value)\n                }\n            }\n        }\n    }\n    def lazy titled(int $a1, int $a2, int $index){\n        switch(language.language){\n            forgenerate($j,$file){\n                case($j.index){\n                    define int $d = fromenum(__language_$j.index__, $index)\n                    title($a1, $a2, $d.value)\n                }\n            }\n        }\n    }\n    def lazy actionbar(int $priority, int $time, int $index){\n        switch(language.language){\n            forgenerate($j,$file){\n                case($j.index){\n                    define int $d = fromenum(__language_$j.index__, $index)\n                    actionbar.show($priority, $time,  $d.value)\n                }\n            }\n        }\n    }\n    def lazy actionbarForAll(int $priority, int $time, int $index){\n        switch(language.language){\n            forgenerate($j,$file){\n                case($j.index){\n                    define int $d = fromenum(__language_$j.index__, $index)\n                    actionbar.showForAll($priority, $time,  $d.value)\n                }\n            }\n        }\n    }\n}","index":0}],"resources":[],"TagsList":{"blocks":{},"functions":{}},"mcTagsList":{"blocks":{},"functions":{"load":{"values":["load"]},"tick":{"values":["main"]}}},"compileOrder":[],"version":{"major":1,"minor":0,"patch":0,"build":1},"compilationSetting":{"TreeMaxSize":20,"FloatPrecision":1000,"removeUselessFile":true,"offuscate":true,"randomLambdaID":true,"scoreboardValue":"tbms.value","scoreboardConst":"tbms.const","scoreboardTmp":"tbms.tmp","tagsFolder":true,"forcedOffuscation":{"language.actionbar.CurrentPriority":"tbms.actbr.prio","language.actionbar.CurrentTime":"tbms.actbr.time"},"libraryFolder":["./lib/1_17/","./lib/1_16_5/","./lib/shared/"],"MCVersion":"1.16.5","ExportAsZip":false,"packformat":8,"rppackformat":8,"CompilerCoreName":"java","Authors":"","generateMAPSFile":true,"generateREADMEFile":true,"opti_FunctionTagsReplace":true,"opti_ExportComment":false,"opti_ShowException":true,"opti_ShowDebug":true,"opti_FileCleanUp":true,"opti_LambdaCleanUp":false,"advanced_debug":false,"isLibrary":false}}