{"projectName":"arrow","datapackDirectory":null,"resourcesPackDirectory":null,"offuscate":true,"isLibrary":true,"description":"","files":[{"name":"import","content":"import standard.java\nimport standard.entity_id\nimport standard.object\nimport math.vector\nimport cmd.sound\nimport math","index":0},{"name":"arrow","content":"package arrow\n\ndef lazy shoot(entity $trg, int $damage, int $maxSpeed, bool $sound, function $arrowInit){\n    /summon arrow ~ ~ ~ {Tags:[\"trg\"],damage:$damage}\n    tag(@s,__arrowOwner)\n    with(@e[tag=trg],true){\n        if ($sound){\n            sound.playAll(minecraft:entity.skeleton.shoot)\n        }\n        float x,y,z = vector.fromselfto($trg)\n        float ox = x\n        x = math.min(math.max(x,-$maxSpeed),$maxSpeed)\n        float mult = x/ox\n        y *= mult\n        z *= mult\n        \n        float c = Random.Range(0,10)/10\n        @s.motion_x = x\n        @s.motion_y = y + c\n        @s.motion_z = z\n        untag(trg)\n        data.copyfromtopath(Owner,@e[tag=__arrowOwner,limit=1],UUID)\n        $arrowInit()\n    }\n    untag(@s,__arrowOwner)\n}\n\ndef lazy shoot(entity $trg, int $damage, int $maxSpeed, function $arrowInit){\n    shoot($trg, $damage, 2.0,true, $arrowInit)\n}\n\ndef lazy shoot(entity $trg, int $damage){\n    shoot($trg, $damage, 2.0, true, null)\n}\ndef lazy shoot(entity $trg){\n    shoot($trg, 2, 2.0, true, null)\n}\n\npredicate isInGround(){\n    \"condition\": \"minecraft:entity_properties\",\n    \"entity\": \"this\",\n    \"predicate\": {\n        \"nbt\": \"{inGround:1b}\"\n    }\n}\n","index":0},{"name":"trident","content":"package trident\n\ndef lazy shoot(entity $trg, int $damage, int $maxSpeed, bool $sound, function $arrowInit){\n    /summon trident ~ ~ ~ {Tags:[\"trg\"],damage:$damage}\n    tag(@s,__arrowOwner)\n    with(@e[tag=trg],true){\n        if ($sound){\n            sound.playAll(minecraft:entity.skeleton.shoot)\n        }\n        float x,y,z = vector.fromselfto($trg)\n        float ox = x\n        x = math.min(math.max(x,-$maxSpeed),$maxSpeed)\n        float mult = x/ox\n        y *= mult\n        z *= mult\n        \n        float c = Random.Range(0,10)/10\n        @s.motion_x = x\n        @s.motion_y = y + c\n        @s.motion_z = z\n        untag(trg)\n        data.copyfromtopath(Owner,@e[tag=__arrowOwner,limit=1],UUID)\n        $arrowInit()\n    }\n    untag(@s,__arrowOwner)\n}\n\ndef lazy shoot(entity $trg, int $damage, int $maxSpeed, function $arrowInit){\n    shoot($trg, $damage, 2,true, $arrowInit)\n}\n\ndef lazy shoot(entity $trg, int $damage){\n    shoot($trg, $damage, 2, true, null)\n}\ndef lazy shoot(entity $trg){\n    shoot($trg, 2, 2, true, null)\n}","index":0},{"name":"firework","content":"package firework\n\ndef lazy shoot(entity $trg, int $damage, int $maxSpeed, bool $sound, function $arrowInit){\n    /summon firework_rocket ~ ~ ~ {Tags:[\"trg\"],LifeTime:40,FireworksItem:{id:firework_rocket,Count:1,tag:{Fireworks:{Explosions:[{Type:1,Trail:1,Colors:[I;11743532],FadeColors:[I;14188952]}],Flight:1}}}}\n    tag(@s,__arrowOwner)\n    with(@e[tag=trg],true){\n        if ($sound){\n            sound.playAll(minecraft:entity.skeleton.shoot)\n        }\n        float x,y,z = vector.fromselfto($trg)\n        float ox = x\n        x = math.min(math.max(x,-$maxSpeed),$maxSpeed)\n        float mult = x/ox\n        y *= mult\n        z *= mult\n        \n        float c = Random.Range(0,10)/10\n        @s.motion_x = x\n        @s.motion_y = y + c\n        @s.motion_z = z\n        untag(trg)\n        data.copyfromtopath(Owner,@e[tag=__arrowOwner,limit=1],UUID)\n        $arrowInit()\n    }\n    untag(@s,__arrowOwner)\n}\n\ndef lazy shoot(entity $trg, int $damage, int $maxSpeed, function $arrowInit){\n    shoot($trg, $damage, 2.0,true, $arrowInit)\n}\n\ndef lazy shoot(entity $trg, int $damage){\n    shoot($trg, $damage, 2.0, true, null)\n}\ndef lazy shoot(entity $trg){\n    shoot($trg, 2, 2.0, true, null)\n}","index":0}],"resources":[],"TagsList":{"blocks":{},"functions":{}},"mcTagsList":{"blocks":{},"functions":{"load":{"values":["load"]},"tick":{"values":["main"]}}},"compileOrder":[],"version":{"major":1,"minor":0,"patch":0,"build":4},"compilationSetting":{"TreeMaxSize":20,"FloatPrecision":1000,"removeUselessFile":true,"offuscate":true,"scoreboardValue":"tbms.value","scoreboardConst":"tbms.const","scoreboardTmp":"tbms.tmp","tagsFolder":true,"forcedOffuscation":{},"libraryFolder":["./lib/1_17/","./lib/1_16_5/","./lib/shared/"],"MCVersion":"1.16.5","ExportAsZip":false,"packformat":6,"rppackformat":7,"CompilerCoreName":"java","Authors":"","generateMAPSFile":true,"generateREADMEFile":true,"opti_FunctionTagsReplace":true,"opti_ExportComment":false,"opti_ShowException":true,"opti_ShowDebug":true,"advanced_debug":false,"isLibrary":false}}