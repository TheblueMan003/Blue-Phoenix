{"projectName":"entity","datapackDirectory":null,"resourcesPackDirectory":null,"offuscate":true,"isLibrary":true,"description":null,"files":[{"name":"import","content":"import standard.java\nimport standard.entity_id\n","index":0},{"name":"entity","content":"package entity\n\npredicate onFire(){\n    \"condition\": \"minecraft:entity_properties\",\n    \"entity\": \"this\",\n    \"predicate\": {\n        \"flags\": {\n            \"is_on_fire\": true\n        }\n    }\n}\n\npredicate isSneaking(){\n    \"condition\": \"minecraft:entity_properties\",\n    \"entity\": \"this\",\n    \"predicate\": {\n        \"flags\": {\n            \"is_sneaking\": true\n        }\n    }\n}\n\npredicate isSprinting(){\n    \"condition\": \"minecraft:entity_properties\",\n    \"entity\": \"this\",\n    \"predicate\": {\n        \"flags\": {\n            \"is_sprinting\": true\n        }\n    }\n}\n\npredicate isSwimming(){\n    \"condition\": \"minecraft:entity_properties\",\n    \"entity\": \"this\",\n    \"predicate\": {\n        \"flags\": {\n            \"is_swimming\": true\n        }\n    }\n}\n\npredicate isBaby(){\n    \"condition\": \"minecraft:entity_properties\",\n    \"entity\": \"this\",\n    \"predicate\": {\n        \"flags\": {\n            \"is_baby\": true\n        }\n    }\n}","index":0},{"name":"player","content":"package entity\n\npredicate xp($amount){\n    \"condition\": \"minecraft:entity_properties\",\n    \"entity\": \"this\",\n    \"predicate\": {\n        \"player\": {\n            \"level\": $amount\n        }\n    }\n}\n\npredicate xp($min,$max){\n    \"condition\": \"minecraft:entity_properties\",\n    \"entity\": \"this\",\n    \"predicate\": {\n        \"player\": {\n            \"level\": {\n                \"min\": $min,\n                \"max\": $max\n            }\n        }\n    }\n}\n\npredicate creative(){\n    \"condition\": \"minecraft:entity_properties\",\n    \"entity\": \"this\",\n    \"predicate\": {\n        \"player\": {\n            \"gamemode\": \"creative\"\n        }\n    }\n}\n\npredicate survival(){\n    \"condition\": \"minecraft:entity_properties\",\n    \"entity\": \"this\",\n    \"predicate\": {\n        \"player\": {\n            \"gamemode\": \"survival\"\n        }\n    }\n}\n\npredicate adventure(){\n    \"condition\": \"minecraft:entity_properties\",\n    \"entity\": \"this\",\n    \"predicate\": {\n        \"player\": {\n            \"gamemode\": \"adventure\"\n        }\n    }\n}\n\npredicate spectator(){\n    \"condition\": \"minecraft:entity_properties\",\n    \"entity\": \"this\",\n    \"predicate\": {\n        \"player\": {\n            \"gamemode\": \"spectator\"\n        }\n    }\n}","index":0},{"name":"effect","content":"package entity\n\npredicate effect($effect,$amplifier,$duration){\n    \"condition\": \"minecraft:entity_properties\",\n    \"entity\": \"this\",\n    \"predicate\": {\n        \"effects\": {\n            \"minecraft:$effect\": {\n                \"amplifier\": $amplifier,\n                \"duration\": $duration\n            }\n        }\n    }\n}\n\npredicate effect($effect,$amplifier){\n    \"condition\": \"minecraft:entity_properties\",\n    \"entity\": \"this\",\n    \"predicate\": {\n        \"effects\": {\n            \"minecraft:$effect\": {\n                \"amplifier\": $amplifier\n            }\n            \n        }\n    }\n}\npredicate effect($effect){\n    \"condition\": \"minecraft:entity_properties\",\n    \"entity\": \"this\",\n    \"predicate\": {\n        \"effects\": {\n            \"minecraft:$effect\": {\n            }\n        }\n        \n    }\n}","index":0},{"name":"team","content":"package entity\n\npredicate team($team){\n    \"condition\": \"minecraft:entity_properties\",\n    \"entity\": \"this\",\n    \"predicate\": {\n        \"targeted_entity\": {\n            \"team\": \"$team\"\n        }\n    }\n}","index":0},{"name":"dimension","content":"package entity\n\npredicate overworld(){\n    \"condition\": \"minecraft:location_check\",\n    \"predicate\": {\n        \"dimension\": \"minecraft:overworld\"\n    }\n}\n\npredicate the_end(){\n    \"condition\": \"minecraft:location_check\",\n    \"predicate\": {\n        \"dimension\": \"minecraft:the_end\"\n    }\n}\n\npredicate nether(){\n    \"condition\": \"minecraft:location_check\",\n    \"predicate\": {\n        \"dimension\": \"minecraft:the_nether\"\n    }\n}","index":0},{"name":"struct","content":"package entity\n\npublic struct entitylist{\n    def lazy __init__(int $select){\n        tag($select,$this)\n    }\n    def lazy withAll(function $f){\n        with(@e[tag=$this]){\n            $f()\n        }\n    }\n    def lazy withAll(bool $v,function $f){\n        with(@e[tag=$this],$v){\n            $f()\n        }\n    }\n    def lazy withAll(bool $v,int $cond,function $f){\n        with(@e[tag=$this],$v, $cond){\n            $f()\n        }\n    }\n    \n    def lazy withFirst(function $f){\n        with(@e[tag=$this,limit=1]){\n            $f()\n        }\n    }\n    def lazy withFirst(bool $v,function $f){\n        with(@e[tag=$this,limit=1],$v){\n            $f()\n        }\n    }\n    def lazy withFirst(bool $v,int $cond,function $f){\n        with(@e[tag=$this,limit=1],$v, $cond){\n            $f()\n        }\n    }\n    \n    def lazy withNearest(function $f){\n        with(@e[tag=$this,limit=1,sort=nearest]){\n            $f()\n        }\n    }\n    def lazy withNearest(bool $v,function $f){\n        with(@e[tag=$this,limit=1,sort=nearest],$v){\n            $f()\n        }\n    }\n    def lazy withNearest(bool $v,int $cond,function $f){\n        with(@e[tag=$this,limit=1,sort=nearest],$v, $cond){\n            $f()\n        }\n    }\n    \n    def lazy withRandom(function $f){\n        with(@e[tag=$this,limit=1,sort=random]){\n            $f()\n        }\n    }\n    def lazy withRandom(bool $v, function $f){\n        with(@e[tag=$this,limit=1,sort=random],$v){\n            $f()\n        }\n    }\n    def lazy withRandom(bool $v,int $cond, function $f){\n        with(@e[tag=$this,limit=1,sort=random],$v, $cond){\n            $f()\n        }\n    }\n    \n    def lazy kill(){\n        /kill @e[tag=$this]\n    }\n    def lazy tp(int $dest){\n        /tp @e[tag=$this] $dest\n    }\n    def lazy count():int{\n        int c = 0\n        with(@e[tag=$this]){\n            c++\n        }\n        return c\n    }\n    def clear(){\n        untag(@e[tag=$this],$this)\n    }\n    def lazy remove(){\n        untag(@s[tag=$this],$this)\n    }\n    def lazy remove(int $select){\n        untag($select,$this)\n    }\n    def lazy add(){\n        tag(@s,$this)\n    }\n    def lazy add(int $select){\n        tag($select,$this)\n    }\n}","index":0},{"name":"struct2","content":"package entity\n\npublic struct playerlist{\n    def lazy __init__(int $select){\n        tag($select,$this)\n    }\n    def lazy withAll(function $f){\n        with(@a[tag=$this]){\n            $f()\n        }\n    }\n    def lazy withAll(bool $v,function $f){\n        with(@a[tag=$this],$v){\n            $f()\n        }\n    }\n    def lazy withAll(bool $v,int $cond,function $f){\n        with(@a[tag=$this],$v, $cond){\n            $f()\n        }\n    }\n    \n    def lazy withFirst(function $f){\n        with(@a[tag=$this,limit=1]){\n            $f()\n        }\n    }\n    def lazy withFirst(bool $v,function $f){\n        with(@a[tag=$this,limit=1],$v){\n            $f()\n        }\n    }\n    def lazy withFirst(bool $v,int $cond,function $f){\n        with(@a[tag=$this,limit=1],$v, $cond){\n            $f()\n        }\n    }\n    \n    def lazy withNearest(function $f){\n        with(@a[tag=$this,limit=1,sort=nearest]){\n            $f()\n        }\n    }\n    def lazy withNearest(bool $v,function $f){\n        with(@a[tag=$this,limit=1,sort=nearest],$v){\n            $f()\n        }\n    }\n    def lazy withNearest(bool $v,int $cond,function $f){\n        with(@a[tag=$this,limit=1,sort=nearest],$v, $cond){\n            $f()\n        }\n    }\n    \n    def lazy withRandom(function $f){\n        with(@a[tag=$this,limit=1,sort=random]){\n            $f()\n        }\n    }\n    def lazy withRandom(bool $v, function $f){\n        with(@a[tag=$this,limit=1,sort=random],$v){\n            $f()\n        }\n    }\n    def lazy withRandom(bool $v,int $cond, function $f){\n        with(@a[tag=$this,limit=1,sort=random],$v, $cond){\n            $f()\n        }\n    }\n    \n    def lazy kill(){\n        /kill @a[tag=$this]\n    }\n    def lazy tp(int $dest){\n        /tp @a[tag=$this] $dest\n    }\n    def lazy count():int{\n        int c = 0\n        with(@a[tag=$this]){\n            c++\n        }\n        return c\n    }\n    def clear(){\n        untag(@a[tag=$this],$this)\n    }\n    def lazy remove(){\n        untag(@s[tag=$this],$this)\n    }\n    def lazy remove(int $select){\n        untag($select,$this)\n    }\n    def lazy add(){\n        tag(@s,$this)\n    }\n    def lazy add(int $select){\n        tag($select,$this)\n    }\n}","index":0},{"name":"name","content":"package entity\n\ndef lazy initSetNameHP(int $HP, int $HP_MAX, int $MAX){\n    def setName(){\n        switch($HP_MAX){\n            forgenerate($i,0,$MAX){\n                case($i){\n                    switch($HP){\n                        forgenerate($j,0,$i){\n                            $j -> data.set({CustomName:'[{\"text\":\"forgenerate($k,0,$eval($j-1)){♥}\",\"color\":\"dark_red\"},{\"text\":\"forgenerate($k,$eval($j+1),$i){♥}\",\"color\":\"black\"}]',CustomNameVisible:1b})\n                        }\n                    }\n                }\n            }\n        }\n    }\n}","index":0}],"resources":[],"TagsList":{"blocks":{},"functions":{}},"mcTagsList":{"blocks":{},"functions":{"load":{"values":["load"]},"tick":{"values":["main"]}}},"compileOrder":[],"version":{"major":1,"minor":0,"patch":0,"build":7},"compilationSetting":{"TreeMaxSize":20,"FloatPrecision":1000,"removeUselessFile":true,"offuscate":true,"scoreboardValue":"tbms.value","scoreboardConst":"tbms.const","scoreboardTmp":"tbms.tmp","tagsFolder":true,"forcedOffuscation":{},"libraryFolder":["./lib/1_16_5/","./lib/shared/"],"MCVersion":"1.16.5","ExportAsZip":false,"packformat":6,"rppackformat":7,"CompilerCoreName":"java","Authors":"","generateMAPSFile":true,"generateREADMEFile":true,"opti_FunctionTagsReplace":true,"opti_ExportComment":false,"opti_ShowException":true,"opti_ShowDebug":true,"advanced_debug":false,"isLibrary":false}}