{"projectName":"time","datapackDirectory":null,"resourcesPackDirectory":null,"offuscate":true,"isLibrary":true,"description":"","files":[{"name":"import","content":"import standard.java\nimport standard.entity_id\nimport standard.object","index":0},{"name":"time","content":"package time\n\nstruct time{\n    int tick\n    def __init__(){\n        tick = 0\n    }\n    def __init__(int h, int m, int s){\n        tick = ((h*60+m)*60+s)*20\n    }\n    def __init__(int h, int m, int s, int t){\n        tick = ((h*60+m)*60+s)*20+t\n    }\n    lazy __add__(int i){\n        tick+=i\n    }\n    lazy __add__(time other){\n        tick += other.tick\n    }\n    lazy __sub__(int i){\n        tick-=i\n    }\n    lazy __sub__(time other){\n        tick -= other.tick\n    }\n    lazy __set__(int i){\n        tick = i\n    }\n    lazy __set__(time other){\n        tick = other.tick\n    }\n    lazy __mult__(int i){\n        tick*=i\n    }\n    lazy __mult__(time other){\n        tick*=other.tick\n    }\n    lazy __div__(int i){\n        tick/=i\n    }\n    lazy __div__(time other){\n        tick/=other.tick\n    }\n    lazy __mod__(int i){\n        tick%=i\n    }\n    lazy __mod__(time other){\n        tick%=other.tick\n    }\n    lazy bool __smaller__(int i){\n        if (tick < i){return true}\n        if (tick >= i){return false}\n    }\n    lazy bool __smaller__(time other){\n        if (tick < other.tick){return true}\n        if (tick >= other.tick){return false}\n    }\n    lazy bool __smaller_or_equals__(int i){\n        if (tick <= i){return true}\n        if (tick > i){return false}\n    }\n    lazy bool __smaller_or_equals__(time other){\n        if (tick <= other.tick){return true}\n        if (tick > other.tick){return false}\n    }\n    lazy bool __bigger__(int i){\n        if (tick > i){return true}\n        if (tick <= i){return false}\n    }\n    lazy bool __bigger__(time other){\n        if (tick > other.tick){return true}\n        if (tick <= other.tick){return false}\n    }\n    lazy bool __bigger_or_equals__(int i){\n        if (tick >= i){return true}\n        if (tick < i){return false}\n    }\n    lazy bool __bigger_or_equals__(time other){\n        if (tick >= other.tick){return true}\n        if (tick < other.tick){return false}\n    }\n    lazy int inMilliSeconds(){\n        return (tick*5)\n    }\n    lazy int getMilliSeconds(){\n        return (inMilliSeconds()%100)\n    }\n    lazy int inSeconds(){\n        return (tick/20)\n    }\n    lazy int getSeconds(){\n        return (inSeconds()%60)\n    }\n    lazy int inMinutes(){\n        return (tick/$eval(20*60))\n    }\n    lazy int getMinutes(){\n        return (inMinutes()%60)\n    }\n    lazy int inHours(){\n        return (tick/$eval(20*60*60))\n    }\n    lazy int getHours(){\n        return (inHours()%24)\n    }\n    lazy int inDay(){\n        return (tick/$eval(20*60*60*24))\n    }\n    lazy int getDay(){\n        return (inDay())\n    }\n    lazy __toJson__(){\n        int h = tick/$eval(20*60*60)\n        int m = (tick/$eval(20*60))%60\n        int s = (tick/20)%60\n        int ms = tick*5\n        return(h,\":\",m,\":\",s,\".\",ms)\n    }\n}","index":0},{"name":"variable","content":"package time\n\ntime second = new time(0,0,1)\ntime minute = new time(0,1,0)\ntime hour = new time(1,0,0)","index":0}],"resources":[],"TagsList":{"blocks":{},"functions":{}},"mcTagsList":{"blocks":{},"functions":{"load":{"values":["load"]},"tick":{"values":["main"]}}},"compileOrder":[],"version":{"major":1,"minor":0,"patch":0,"build":2},"compilationSetting":{"TreeMaxSize":20,"FloatPrecision":1000,"removeUselessFile":true,"offuscate":true,"scoreboardValue":"tbms.value","scoreboardConst":"tbms.const","scoreboardTmp":"tbms.tmp","tagsFolder":true,"forcedOffuscation":{},"libraryFolder":["./lib/1_17/","./lib/1_16_5/","./lib/shared/"],"MCVersion":"1.16.5","ExportAsZip":false,"packformat":7,"rppackformat":7,"CompilerCoreName":"java","Authors":"","generateMAPSFile":true,"generateREADMEFile":true,"opti_FunctionTagsReplace":true,"opti_ExportComment":false,"opti_ShowException":true,"opti_ShowDebug":true,"opti_FileCleanUp":true,"advanced_debug":false,"isLibrary":false}}