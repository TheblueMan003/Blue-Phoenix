{"projectName":"java","datapackDirectory":null,"offuscate":false,"isLibrary":false,"files":[{"name":"import","content":"\n","index":0},{"name":"at","content":"package .\n\ndef lazy @__numerical_only__ at(float $x, float $y, float $z, function $action){\n\t/execute positioned $x $y $z run function $action.name\n}\n\ndef lazy at(int $value, function $action){\n\t/execute at $value run function $action.name\n}\n\ndef lazy at(float x, float y, float z, function $action){\n\t/summon armor_stand ~ ~ ~ {Invisible:1,Tags:[\"at_trg\"],NoGravity:1,Marker:1}\n\t@e[tag=at_trg].x = x\n\t@e[tag=at_trg].y = y\n\t@e[tag=at_trg].z = z\n\tat(@e[tag=at_trg]){\n\t\t$action()\n\t}\n\tkill(@e[tag=at_trg])\n}\n\ndef lazy @__numerical_only__ positioned(float $x, float $y, float $z, function $action){\n\t/execute positioned $x $y $z run function $action.name\n}\n\ndef lazy positioned(int $value, function $action){\n\t/execute at $value run function $action.name\n}\n\ndef lazy positioned(float x, float y, float z, function $action){\n\t/summon armor_stand ~ ~ ~ {Invisible:1,Tags:[\"at_trg\"],NoGravity:1,Marker:1}\n\t@e[tag=at_trg].x = x\n\t@e[tag=at_trg].y = y\n\t@e[tag=at_trg].z = z\n\tat(@e[tag=at_trg]){\n\t\t$action()\n\t}\n\tkill(@e[tag=at_trg])\n}","index":0},{"name":"clone","content":"package .\n\ndef lazy clone(string value){\n\t/clone value\n}\n\ndef lazy fill(int sx, int sy, int sz, int ex, int ey, int ez, int $block){\n\tint dx, dy, dz\n\tif (sx > ex){\n\t\tdx = sx\n\t\tsx = ex\n\t\tex = dx\n\t}\n\tif (sy > ey){\n\t\tdy = sy\n\t\tsy = ey\n\t\tey = dy\n\t}\n\tif (sz > ez){\n\t\tdz = sz\n\t\tsz = ez\n\t\tez = dz\n\t}\n\t/summon armor_stand ~ ~ ~ {Invisible:1,NoGravity:1,Tags:[\"fill_trg\"]}\n\tfor(int x = sx;x <= ex;x++){\n\t\t@e[tag=fill_trg].x = x\n\t\tfor(int y = sy;y <= ey;y++){\n\t\t\t@e[tag=fill_trg].y = y\n\t\t\tfor(int z = sz;z <= ez;z++){\n\t\t\t\t@e[tag=fill_trg].z = z\n\t\t\t\tat(@e[tag=fill_trg,limit=1]){\n\t\t\t\t\t/setblock ~ ~ ~ $block\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tkill(@e[tag=fill_trg])\n}\n\ndef lazy setblock(int x, int y, int z, int $block){\n\t/summon armor_stand ~ ~ ~ {Invisible:1,NoGravity:1,Tags:[\"fill_trg\"]}\n\t\n\t@e[tag=fill_trg].x = x\n\t@e[tag=fill_trg].y = y\n\t@e[tag=fill_trg].z = z\n\tat(@e[tag=fill_trg,limit=1]){\n\t\t/setblock ~ ~ ~ $block\n\t}\n\tkill(@e[tag=fill_trg])\n}","index":0},{"name":"constant","content":"package .\n\nconst bool true = true\nconst bool false = false\n\npackage int\n\nconst int minValue = -2147483648\nconst int maxValue = 2147483647\n","index":0},{"name":"rotated","content":"package .\n\ndef lazy facing(string $value, function $val){\n\t/execute facing entity $value run function $val.name\n}\n\ndef lazy @__numerical_only__ facing(int $x,int $y, int $z, function $val){\n\t/execute facing $x $y $z run function $val.name\n}\n\ndef lazy facing(int $x,int $y, int $z, function $val){\n\tat($x,$y,$z){\n\t\t/execute facing ~ ~ ~ run function $val.name\n\t}\n}","index":0},{"name":"version","content":"package .\n\ndef lazy __version__(){\n\ttellraw(@a,(\"===[$projectName]===\",blue))\n\ttellraw(@a,(\"version: $projectVersion\",blue))\n}\ndef helper version(){\n\t__version__()\n}","index":0}],"TagsList":{"blocks":{},"functions":{}},"mcTagsList":{"blocks":{},"functions":{"load":{"values":["load"]},"tick":{"values":["main"]}}},"compileOrder":[],"version":{"major":1,"minor":0,"patch":0,"build":30}}