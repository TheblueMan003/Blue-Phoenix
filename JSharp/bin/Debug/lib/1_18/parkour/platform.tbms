{"projectName":"platform","datapackDirectory":null,"resourcesPackDirectory":null,"offuscate":true,"isLibrary":true,"description":null,"files":[{"name":"import","content":"import standard.java\nimport standard.entity_id\nimport standard.object\nimport entity.armor_stand\nimport entity","index":0},{"name":"platform_base","content":"package platform\n\ndef lazy summonPlatform(int $tag, int $lb, int $hb, int $c1, int $c2){\n    align(xyz){\n        positioned(~0.5 ~ ~0.5){\n            forgenerate($x,-$lb,$hb){\n                forgenerate($z,-$lb,$hb){\n                    /summon armor_stand ~$x ~ ~$z {NoGravity:1,Invisible:1,Marker:1,Tags:[$tag,\"ptf\",\"ptf_coll\",\"ptf_base\"],Passengers:[{id:shulker,NoAI:1,Tags:[\"ptf\",\"ptf_coll\"],Color:$eval($c1+(($c2-$c1)*(((4+($x))+(4+($z)))%2)))eval$,Silent:1,Invulnerable:1}]}\n                }\n            }\n            /summon armor_stand ~ ~1 ~ {Tags:[$tag,\"ptf\",\"ptf_model\",\"ptf_trg\",\"ptf_base\"],Invisible:1,Marker:1,NoGravity:1}\n            with(@e[tag=ptf_trg]){\n                untag(ptf_trg)\n                //armor_stand.setModel($item,$model)\n            }\n        }\n    }\n}","index":0},{"name":"moving_platform","content":"package platform\n\nint $speedLimit = 2\ndef lazy redirect(int $tag){\n    untag(ptf_xp)\n    untag(ptf_xm)\n    untag(ptf_zp)\n    untag(ptf_zm)\n    tag($tag)\n}\n\nINT Tick\nINT Speed\nbool dragPlayer := false\n\ndef setDrag(bool value){\n    dragPlayer = value\n}\nblocktags air{\n    air,\nlight,\ntripwire\n}\ndef ticking moving(){\n    untag(@a,upped)\n    with(@e[tag=ptf],true){\n        if (@s[tag=ptf_xp]){\n            forgenerate($i,1,$speedLimit){\n                if (Speed == $i){/tp @s ~$eval($i/10) ~ ~}\n            }\n        }\n        if (@s[tag=ptf_xm]){\n            forgenerate($i,1,$speedLimit){\n                if (Speed == $i){/tp @s ~-$eval($i/10) ~ ~}\n            }\n        }\n        if (@s[tag=ptf_zp]){\n            forgenerate($i,1,$speedLimit){\n                if (Speed == $i){/tp @s ~ ~ ~$eval($i/10)}\n            }\n        }\n        if (@s[tag=ptf_zm]){\n            forgenerate($i,1,$speedLimit){\n                if (Speed == $i){/tp @s ~ ~ ~-$eval($i/10)}\n            }\n        }\n        if (@s[tag=ptf_model]){\n            if (dragPlayer){\n                if (@s[tag=ptf_xp]){\n                    forgenerate($i,1,$speedLimit){\n                        if (Speed == $i){\n                            with(@a[distance=..3,nbt={OnGround:1b}],true,block(~ ~-1 ~ #air) && block(~1 ~ ~ #air) && block(~1 ~1 ~ #air)){\n                                /tp @s ~$eval($i/10) ~ ~\n                            }\n                            positioned(~ ~-3 ~){\n                                with(@a[distance=..3,nbt={OnGround:0b}], true, entity.effect(levitation) && block(~ ~1 ~ #{air,light,tripwire})){\n                                    /tp @s ~$eval($i/10) ~ ~\n                                }\n                            }\n                        }\n                    }\n                }\n                if (@s[tag=ptf_xm]){\n                    forgenerate($i,1,$speedLimit){\n                        if (Speed == $i){\n                            with(@a[distance=..3,nbt={OnGround:1b}],true,block(~ ~-1 ~ #air) && block(~-1 ~ ~ #air) && block(~-1 ~1 ~ #air)){\n                                /tp @s ~-$eval($i/10) ~ ~\n                            }\n                            positioned(~ ~-3 ~){\n                                with(@a[distance=..3,nbt={OnGround:0b}], true, entity.effect(levitation) && block(~ ~1 ~ #{air,light,tripwire})){\n                                    /tp @s ~-$eval($i/10) ~ ~\n                                }\n                            }\n                        }\n                    }\n                }\n                if (@s[tag=ptf_zp]){\n                    forgenerate($i,1,$speedLimit){\n                        if (Speed == $i){\n                            with(@a[distance=..3,nbt={OnGround:1b}],true,block(~ ~-1 ~ #air) && block(~ ~ ~1 #air) && block(~ ~1 ~1 #air)){\n                                /tp @s ~ ~ ~$eval($i/10)\n                            }\n                            positioned(~ ~-3 ~){\n                                with(@a[distance=..3,nbt={OnGround:0b}], true, entity.effect(levitation) && block(~ ~1 ~ #{air,light,tripwire})){\n                                    /tp @s ~ ~ ~$eval($i/10)\n                                }\n                            }\n                        }\n                    }\n                }\n                if (@s[tag=ptf_zm]){\n                    forgenerate($i,1,$speedLimit){\n                        if (Speed == $i){\n                            with(@a[distance=..3,nbt={OnGround:1b}],true,block(~ ~-1 ~ #air) && block(~ ~ ~-1 #air) && block(~ ~1 ~-1 #air)){\n                                /tp @s ~ ~ ~-$eval($i/10)\n                            }\n                            positioned(~ ~-3 ~){\n                                with(@a[distance=..3,nbt={OnGround:0b}], true, entity.effect(levitation) && block(~ ~1 ~ #{air,light,tripwire})){\n                                    /tp @s ~ ~ ~-$eval($i/10)\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            Tick++\n            Tick%=(10/Speed)\n            if (Tick==0){\n                if (block(~ -64 ~ minecraft:magenta_glazed_terracotta[facing=west])){\n                    positioned(~ ~-1 ~){\n                        with(@e[tag=ptf_base,distance=..2.0]){\n                            redirect(ptf_xp)\n                        }\n                    }\n                }\n                if (block(~ -64 ~ minecraft:magenta_glazed_terracotta[facing=east])){\n                    positioned(~ ~-1 ~){\n                        with(@e[tag=ptf_base,distance=..2.0]){\n                            redirect(ptf_xm)\n                        }\n                    }\n                }\n                if (block(~ -64 ~ minecraft:magenta_glazed_terracotta[facing=north])){\n                    positioned(~ ~-1 ~){\n                        with(@e[tag=ptf_base,distance=..2.0]){\n                            redirect(ptf_zp)\n                        }\n                    }\n                }\n                if (block(~ -64 ~ minecraft:magenta_glazed_terracotta[facing=south])){\n                    positioned(~ ~-1 ~){\n                        with(@e[tag=ptf_base,distance=..2.0]){\n                            redirect(ptf_zm)\n                        }\n                    }\n                }\n                if (block(~ ~-1 ~ minecraft:magenta_glazed_terracotta[facing=west])){\n                    positioned(~ ~-1 ~){\n                        with(@e[tag=ptf_base,distance=..2.0]){\n                            redirect(ptf_xp)\n                        }\n                    }\n                }\n                if (block(~ ~-1 ~ minecraft:magenta_glazed_terracotta[facing=east])){\n                    positioned(~ ~-1 ~){\n                        with(@e[tag=ptf_base,distance=..2.0]){\n                            redirect(ptf_xm)\n                        }\n                    }\n                }\n                if (block(~ ~-1 ~ minecraft:magenta_glazed_terracotta[facing=north])){\n                    positioned(~ ~-1 ~){\n                        with(@e[tag=ptf_base,distance=..2.0]){\n                            redirect(ptf_zp)\n                        }\n                    }\n                }\n                if (block(~ ~-1 ~ minecraft:magenta_glazed_terracotta[facing=south])){\n                    positioned(~ ~-1 ~){\n                        with(@e[tag=ptf_base,distance=..2.0]){\n                            redirect(ptf_zm)\n                        }\n                    }\n                }\n                if (block(~ ~-1 ~ obsidian)){\n                    positioned(~ ~-1 ~){\n                        with(@e[tag=ptf,distance=..2.0]){\n                            /tp @s 0 -200 0\n                        }\n                    }\n                }\n                if (block(~ -64 ~ obsidian)){\n                    positioned(~ ~-1 ~){\n                        with(@e[tag=ptf,distance=..2.0]){\n                            /tp @s 0 -200 0\n                        }\n                    }\n                }\n                \n            }\n        }\n    }\n}\nenum platformtype(int lb, int hb){\n    BigPlatform(1,1),\n    NormalPlatform(0,1),\n    SmallPlatform(0,0)\n}\nenum platformdirection(json tag, json face){\n    XPlus(\"ptf_xp\",west),\n    XMinus(\"ptf_xm\",east),\n    ZPlus(\"ptf_zp\",north),\n    ZMinus(\"ptf_zm\",south)\n}\nenum platformspeed(int speed, int id, int color1, int color2){\n    normal(1, 1, 0, 15),\n    fast(2, 2, 0, 14)\n}\nforgenerate($i,platformspeed){\n    forgenerate($j,platformtype){\n        forgenerate($k, platformdirection){\n            def summon$j$k$i.id(){\n                align(xyz){\n                    positioned(~0.5 ~ ~0.5){\n                        summonPlatform($k.tag,$j.lb,$j.hb,$i.color1,$i.color2)\n                        with(@e[tag=ptf,distance=..2.0]){\n                            Speed = $i.speed\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\nforgenerate($i,platformspeed){\n    forgenerate($j,platformtype){\n        def helper summon$j$i.id(){\n            forgenerate($k, platformdirection){\n                align(xyz){\n                    positioned(~0.5 ~ ~0.5){\n                        if (block(~ ~ ~ minecraft:magenta_glazed_terracotta[facing=$k.face])){\n                            summonPlatform($k.tag,$j.lb,$j.hb,$i.color1,$i.color2)\n                            with(@e[tag=ptf,distance=..2.0]){\n                                Speed = $i.speed\n                            }\n                        }\n                        if (block(~ -64 ~ minecraft:magenta_glazed_terracotta[facing=$k.face])){\n                            summonPlatform($k.tag,$j.lb,$j.hb,$i.color1,$i.color2)\n                            with(@e[tag=ptf,distance=..2.0]){\n                                Speed = $i.speed\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}","index":0}],"resources":[],"TagsList":{"blocks":{},"functions":{}},"mcTagsList":{"blocks":{},"functions":{"load":{"values":["load"]},"tick":{"values":["main"]}}},"compileOrder":[],"version":{"major":1,"minor":0,"patch":0,"build":15},"compilationSetting":{"TreeMaxSize":20,"FloatPrecision":1000,"removeUselessFile":true,"offuscate":true,"randomLambdaID":false,"scoreboardValue":"tbms.value","scoreboardConst":"tbms.const","scoreboardTmp":"tbms.tmp","tagsFolder":true,"forcedOffuscation":{},"libraryFolder":["./lib/1_16_5/","./lib/shared/"],"MCVersion":"1.17","ExportAsZip":false,"packformat":6,"rppackformat":7,"CompilerCoreName":"java","Authors":"","generateMAPSFile":true,"generateREADMEFile":true,"opti_FunctionTagsReplace":true,"opti_ExportComment":false,"opti_ShowException":true,"opti_ShowDebug":true,"opti_FileCleanUp":true,"advanced_debug":false,"isLibrary":false}}